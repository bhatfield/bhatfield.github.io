Ext.data.JsonP['Posts']({"tagname":"class","name":"Posts","alternateClassNames":[],"mixins":["Reviewable"],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/query.yml"},{"filename":"batch_delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/batch_delete.yml"},{"filename":"show.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/show.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/count.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/create.yml"},{"filename":"update.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/update.yml"},{"filename":"Posts.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/Posts.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Posts/delete.yml"}],"members":{"cfg":[],"property":[{"name":"acls","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-acls"},{"name":"content","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-content"},{"name":"created_at","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"custom_fields","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-custom_fields"},{"name":"event","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-event"},{"name":"id","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-id"},{"name":"photo","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-photo"},{"name":"ratings_average","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_average"},{"name":"ratings_count","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_count"},{"name":"ratings_summary","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_summary"},{"name":"reviews","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-reviews"},{"name":"reviews_count","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-reviews_count"},{"name":"tags","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-tags"},{"name":"title","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-title"},{"name":"updated_at","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-updated_at"},{"name":"user","tagname":"property","owner":"Posts","meta":{"[:hide]":false},"id":"property-user"}],"method":[{"name":"posts/batch_delete.json","tagname":"method","owner":"Posts","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-batch_delete"},{"name":"posts/count.json","tagname":"method","owner":"Posts","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"posts/create.json","tagname":"method","owner":"Posts","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-create"},{"name":"posts/delete.json","tagname":"method","owner":"Posts","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"posts/query.json","tagname":"method","owner":"Posts","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"},{"name":"posts/show.json","tagname":"method","owner":"Posts","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-show"},{"name":"posts/update.json","tagname":"method","owner":"Posts","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>A Post represents a wall post or similar social media content.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-acls' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-acls' class='name not-expandable'>acls</a><span> : <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a>[]</span></div><div class='description'><div class='short'><p>Single-element array containing the object's ACL, if any.</p>\n</div><div class='long'><p>Single-element array containing the object's ACL, if any.</p>\n</div></div></div><div id='property-content' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-content' class='name not-expandable'>content</a><span> : String</span></div><div class='description'><div class='short'><p>Text content of the post.</p>\n</div><div class='long'><p>Text content of the post.</p>\n</div></div></div><div id='property-created_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Creation date for this object.</p>\n</div><div class='long'><p>Creation date for this object.</p>\n</div></div></div><div id='property-custom_fields' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-custom_fields' class='name expandable'>custom_fields</a><span> : String/Hash</span></div><div class='description'><div class='short'>User defined fields. ...</div><div class='long'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></div></div><div id='property-event' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-event' class='name not-expandable'>event</a><span> : String</span></div><div class='description'><div class='short'><p>Event this post belongs to.</p>\n</div><div class='long'><p>Event this post belongs to.</p>\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>Generated ID for this object.</p>\n</div><div class='long'><p>Generated ID for this object.</p>\n</div></div></div><div id='property-photo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-photo' class='name not-expandable'>photo</a><span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></span></div><div class='description'><div class='short'><p>Primary photo for this post.</p>\n</div><div class='long'><p>Primary photo for this post.</p>\n</div></div></div><div id='property-ratings_average' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_average' class='name expandable'>ratings_average</a><span> : Number</span></div><div class='description'><div class='short'>Average rating for this object. ...</div><div class='long'><p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n</div></div></div><div id='property-ratings_count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_count' class='name expandable'>ratings_count</a><span> : Number</span></div><div class='description'><div class='short'>Total number of reviews for this object that include a rating. ...</div><div class='long'><p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-ratings_summary' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_summary' class='name expandable'>ratings_summary</a><span> : Hash</span></div><div class='description'><div class='short'>Breakdown of the number of reviews that specified a given rating value. ...</div><div class='long'><p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-reviews' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-reviews' class='name expandable'>reviews</a><span> : <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>[]</span></div><div class='description'><div class='short'>List of reviews for this object. ...</div><div class='long'><p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-reviews_count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-reviews_count' class='name expandable'>reviews_count</a><span> : Number</span></div><div class='description'><div class='short'>Total number of reviews for this object. ...</div><div class='long'><p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-tags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-tags' class='name not-expandable'>tags</a><span> : String[]</span></div><div class='description'><div class='short'><p>List of tags for this object.</p>\n</div><div class='long'><p>List of tags for this object.</p>\n</div></div></div><div id='property-title' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-title' class='name not-expandable'>title</a><span> : String</span></div><div class='description'><div class='short'><p>Title of the post.</p>\n</div><div class='long'><p>Title of the post.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Last update time for this object.</p>\n</div><div class='long'><p>Last update time for this object.</p>\n</div></div></div><div id='property-user' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><a href='#!/api/Posts-property-user' class='name not-expandable'>user</a><span> : String</span></div><div class='description'><div class='short'><p>User who created this post.</p>\n</div><div class='long'><p>User who created this post.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-batch_delete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Posts-method-batch_delete' class='name expandable'>posts/batch_delete.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Deletes Posts objects that match the query constraints provided in the where parameter. ...</div><div class='long'><p>Deletes Posts objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Posts objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>Any <a href=\"#!/api/Posts-property-photo\" rel=\"Posts-property-photo\" class=\"docClass\">primary photos</a> associated with the matched objects are not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Encoded JSON object that specifies constraint values for Posts objects to delete.\nIf not specified, all Posts objects are deleted.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to delete all Post objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"posts/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Post objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/posts/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to delete all Post objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"posts/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Post object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to delete all Post objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"posts/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Post objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><strong class='http-method'>GET </strong><a href='#!/api/Posts-method-count' class='name not-expandable'>posts/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of Post objects.</p>\n</div><div class='long'><p>Retrieves the total number of Post objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of Post objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of Post objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"posts/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/posts/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"postsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of Post objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"posts/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of Post objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"posts/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><strong class='http-method'>POST </strong><a href='#!/api/Posts-method-create' class='name expandable'>posts/create.json</a></div><div class='description'><div class='short'>Create a post, which can be a Facebook-style wall post or Digg-style\nsubmission with content. ...</div><div class='long'><p>Create a post, which can be a Facebook-style wall post or Digg-style\nsubmission with content.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>content</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Text content of the post.</p>\n</div></li><li><span class='pre'>title</span> : String<div class='sub-desc'><p>Title of the post.</p>\n</div></li><li><span class='pre'>event_id</span> : String<div class='sub-desc'><p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> this post belongs to.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to attach as the primary photo for this object.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to attach as the primary photo for this object.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated list of tags for this object.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to create the object on behalf of.</p>\n\n<p>The current login user must be an application admin to create an object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>posts</span> : <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a>[]<div class='sub-desc'><p>Single-element array containing the newly-created post.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example creates a new post and checks the response.</p>\n\n<pre><code>Cloud.Posts.create({\n    content: 'Man Walks On Moon',\n    title: 'News of the day',\n    photo: Titanium.Filesystem.getFile('photo.jpg')\n}, function (e) {\n    if (e.success) {\n        var post = e.posts[0];\n        alert('Success:\\n' +\n            'id: ' + post.id + '\\n' +\n            'title: ' + post.title + '\\n' +\n            'content: ' + post.content + '\\n' +\n            'updated_at: ' + post.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"photo=@photo.jpg\" -F \"content=Buzz at Appcelerator Cloud Services\" -F \"title=Today's News\" https://api.cloud.appcelerator.com/v1/posts/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"createPost\"\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a252d9ca724676000003\",\n        \"title\": \"Today's News\",\n        \"created_at\": \"2011-07-30T06:18:58+0000\",\n        \"updated_at\": \"2011-07-30T06:18:58+0000\",\n        \"content\": \"Post Body\",\n        \"reviews_count\": 0,\n        \"ratings_average\": 0.0,\n        \"ratings_summary\": {\n        },\n        \"user\": {\n          \"id\": \"4e33a251d9ca724676000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:18:57+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a252d9ca724676000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:18:58+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"processed\": false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"title\": @\"Appcelerator Cloud Services buzz\",\n    @\"content\": @\"More users joined Appcelerator Cloud Services\"\n};\n\n[APSPosts create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Created post!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"title\", \"Today's News\");\ndata.put(\"content\", \"Buzz at Appcelerator Cloud Services\");\n\ntry {\n    APSPosts.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Posts-method-delete' class='name expandable'>posts/delete.json</a></div><div class='description'><div class='short'>Deletes the post with the given id. ...</div><div class='long'><p>Deletes the post with the given <code>id</code>. The original submitter can always delete\na post.</p>\n\n<p>The <a href=\"#!/api/Posts-property-photo\" rel=\"Posts-property-photo\" class=\"docClass\">primary photo</a> associated with the object is not deleted.</p>\n\n<p>An application admin can delete any Post object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>post_id</span> : String<div class='sub-desc'><p>ID of the post to delete.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to delete the Post object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to delete a Post object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example deletes a post and checks the response.</p>\n\n<pre><code>Cloud.Posts.remove({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/posts/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;post_id=4d86d26ed0afbe107400000f\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deletePost\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"post_id\":@\"4d86d26ed0afbe107400000f\"\n};\n\n[APSPosts remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Removed!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4d86d26ed0afbe107400000f\");\n\ntry {\n    APSPosts.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><strong class='http-method'>GET </strong><a href='#!/api/Posts-method-query' class='name expandable'>posts/query.json</a></div><div class='description'><div class='short'>Performs custom query of posts with sorting and pagination. ...</div><div class='long'><p>Performs custom query of posts with sorting and pagination. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In addition to custom fields, the following pre-defined fields in posts\nthat can be queried and sorted:</p>\n\n<ul>\n<li><code>user_id</code> : <code>String</code>. Post owner's user ID.</li>\n<li><code>title</code> : <code>String</code>. Post title.</li>\n<li><code>event_id</code> : <code>String</code>. ID of the event posts belong to.</li>\n<li><code>tags_array</code> : <code>String</code>. Post tags.</li>\n<li><code>ratings_average</code> : <code>Number</code>. Post's average rating. See {@Reviews}.</li>\n<li><code>ratings_count</code> : <code>Number</code>. Post's total number of ratings. See {@Reviews}.</li>\n<li><code>reviews_count</code> : <code>Number</code>. Post's total number of reviews. See {@Reviews}.</li>\n<li><code>created_at</code> : <code>Date</code>. Timestamp when the post was created.</li>\n<li><code>updated_at</code> : <code>Date</code>. Timestamp when the post was last updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong>, each Post object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>posts</span> : <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a>[]<div class='sub-desc'><p>List of posts matching the query parameters.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a list of posts and checks the response.</p>\n\n<pre><code>Cloud.Posts.query({\n    page: 1,\n    per_page: 20,\n    where: {\n        reviews_count: { '$gt': 1.0 }\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.posts.length);\n        for (var i = 0; i &lt; e.posts.length; i++) {\n            var post = e.posts[i];\n            alert('id: ' + post.id + '\\n' +\n                'id: ' + post.id + '\\n' +\n                'title: ' + post.title + '\\n' +\n                'content: ' + post.content + '\\n' +\n                'updated_at: ' + post.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request: If your app assigns a geo location to each post, query posts with average rating greater than 7 near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"ratings_average\":{\"$gt\":7.0},\"coordinates\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/posts/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"queryPosts\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a252d9ca724676000003\",\n        \"title\": \"Post title\",\n        \"created_at\": \"2011-07-30T06:18:58+0000\",\n        \"updated_at\": \"2011-07-30T06:18:58+0000\",\n        \"content\": \"Post Body\",\n        \"reviews_count\": 10,\n        \"ratings_average\": 7.5,\n        \"ratings_count\" : 10,\n        \"ratings_summary\": {\n            \"10\": 5,\n            \"5\" : 5\n        },\n        \"user\": {\n          \"id\": \"4e33a251d9ca724676000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:18:57+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a252d9ca724676000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:18:58+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"processed\": true\n        },\n    \"custom_fields\": {\n      \"coordinates\": [-122.23, 37.12] }\n    }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"where\": @{\n        @\"ratings_average\":@{\n            @\"$gt\":@7.0\n        }\n    }\n};\n\n[APSPosts query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu posts\", (unsigned long)((NSArray *)e.response[@\"posts\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\n    JSONObject params = new JSONObject(\"{'ratings_average': {'$gt': 7.0}}\");\n    data.put(\"where\", params);\n\n    APSPosts.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray posts = e.getResponse().getJSONArray(\"posts\");\n                    if (posts.length() &lt;= 0) {\n                        Log.i(\"APSPosts\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; posts.length(); i++) {\n                            JSONObject review = posts.getJSONObject(i);\n                            Log.i(\"APSPosts\", posts.getString(\"title\") + \":\" + posts.getString(\"content\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPosts\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + e.toString());\n} catch (JSONException e) {\n    Log.e(\"APSPosts\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><strong class='http-method'>GET </strong><a href='#!/api/Posts-method-show' class='name expandable'>posts/show.json</a></div><div class='description'><div class='short'>Returns  the post with the given id. ...</div><div class='long'><p>Returns  the post with the given <code>id</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>post_id</span> : String<div class='sub-desc'><p>Post ID to show.</p>\n\n<p>Either <code>post_id</code> <strong>or</strong> <code>post_ids</code> must be specified.</p>\n</div></li><li><span class='pre'>post_ids</span> : String[]<div class='sub-desc'><p>Comma-separated list of post IDs.</p>\n\n<p>Either <code>post_id</code> <strong>or</strong> <code>post_ids</code> must be specified.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the identified objects, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong> the Post object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>posts</span> : <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a>[]<div class='sub-desc'><p>List of identified posts.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves information about a post and checks the response.</p>\n\n<pre><code>Cloud.Posts.show({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        var post = e.posts[0];\n        alert('Success:\\n' +\n            'id: ' + post.id + '\\n' +\n            'title: ' + post.title + '\\n' +\n            'content: ' + post.content + '\\n' +\n            'updated_at: ' + post.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/posts/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;post_id=4e33a5b7d9ca7246ba000003&amp;show_user_like=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"showPosts\"\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a5b7d9ca7246ba000003\",\n        \"title\": \"Post title\",\n        \"created_at\": \"2011-07-30T06:33:27+0000\",\n        \"current_user_liked\": true,                        \n        \"updated_at\": \"2011-07-30T06:33:27+0000\",\n        \"content\": \"Post Body\",\n        \"reviews_count\": 10,\n        \"ratings_average\": 7.5,\n        \"ratings_summary\": {\n                 \"10\": 5,\n                 \"5\" : 5\n        },                        \n        \"user\": {\n          \"id\": \"4e33a5b6d9ca7246ba000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:33:26+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a5b7d9ca7246ba000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:33:27+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"processed\": false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{@\"status_id\": @\"4e33a5b7d9ca7246ba000003\"};\n[APSPosts show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *posts = e.response[@\"posts\"];\n        NSDictionary *post = posts[0];\n        NSString *message = [NSString stringWithFormat:@\"message: %@\", post[@\"content\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a5b7d9ca7246ba000003\");\n\ntry {\n    APSPosts.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSPosts\", e.getResponseString());\n                }\n                catch (APSCloudException err) {\n                    Log.e(\"APSPosts\", \"ERROR: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + err.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Posts'>Posts</span></div><strong class='http-method'>PUT </strong><a href='#!/api/Posts-method-update' class='name expandable'>posts/update.json</a></div><div class='description'><div class='short'>Updates the identified post. ...</div><div class='long'><p>Updates the identified post. The original submitter can always update\na post.</p>\n\n<p>An application admin can update any Post object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>post_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the post to update.</p>\n</div></li><li><span class='pre'>content</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Text content of the post.</p>\n</div></li><li><span class='pre'>title</span> : String<div class='sub-desc'><p>Title of the post.</p>\n</div></li><li><span class='pre'>event_id</span> : String<div class='sub-desc'><p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> this post belongs to.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to attach as the primary photo for this object.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to attach as the primary photo for this object.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated list of tags for this object.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n\n<p>To remove an ACL, set <code>acl_name</code> or <code>acl_id</code> to an empty string.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n\n<p>To remove an ACL, set <code>acl_name</code> or <code>acl_id</code> to an empty string.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to update the Post object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to update a Post object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>posts</span> : <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a>[]<div class='sub-desc'><p>Single-element array containing the updated post.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example updates a post and checks the response.</p>\n\n<pre><code>Cloud.Posts.update({\n    post_id: savedPostId,\n    title: 'Lunar Eclipse'\n}, function (e) {\n    if (e.success) {\n        var post = e.posts[0];\n        alert('Success:\\n' +\n            'id: ' + post.id + '\\n' +\n            'title: ' + post.title + '\\n' +\n            'content: ' + post.content + '\\n' +\n            'updated_at: ' + post.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"post_id=4e33a5b7d9ca7246ba000003\" -F \"title=Updated Post Title\" https://api.cloud.appcelerator.com/v1/posts/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"updatePost\"\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a5b7d9ca7246ba000003\",\n        \"title\": \"Updated Post Title\",\n        \"created_at\": \"2011-07-30T06:33:27+0000\",\n        \"updated_at\": \"2011-07-30T06:33:27+0000\",\n        \"content\": \"Updated Post Body\",\n        \"reviews_count\": 10,\n        \"ratings_average\": 7.5,\n        \"ratings_summary\": {\n            \"10\": 5,\n            \"5\" : 5\n        },\n        \"user\": {\n          \"id\": \"4e33a5b6d9ca7246ba000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:33:26+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a5b7d9ca7246ba000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:33:27+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"processed\": false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"post_id\": @\"4e33a5b7d9ca7246ba000003\",\n    @\"title\":@\"Updated Post Title\"\n};\n\n[APSPosts update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Updated!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a5b7d9ca7246ba000003\");\ndata.put(\"title\", \"Updated Post Title\");\n\ntry {\n    APSPosts.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject post = e.getResponse().getJSONArray(\"posts\").getJSONObject(0);\n                    Log.i(\"APSPosts\", posts.getString(\"title\") + \" \" + posts.getString(\"content\"));\n                } catch (JSONException err) {\n                    Log.e(\"APSPosts\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + err.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});