Ext.data.JsonP['Likes']({"tagname":"class","name":"Likes","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Likes/query.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Likes/create.yml"},{"filename":"Likes.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Likes/Likes.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Likes/delete.yml"}],"members":{"cfg":[],"property":[{"name":"created_at","tagname":"property","owner":"Likes","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"id","tagname":"property","owner":"Likes","meta":{"[:hide]":false},"id":"property-id"},{"name":"likeable_id","tagname":"property","owner":"Likes","meta":{"[:hide]":false},"id":"property-likeable_id"},{"name":"likeable_type","tagname":"property","owner":"Likes","meta":{"[:hide]":false},"id":"property-likeable_type"},{"name":"updated_at","tagname":"property","owner":"Likes","meta":{"[:hide]":false},"id":"property-updated_at"},{"name":"user","tagname":"property","owner":"Likes","meta":{"[:hide]":false},"id":"property-user"}],"method":[{"name":"likes/create.json","tagname":"method","owner":"Likes","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-create"},{"name":"likes/delete.json","tagname":"method","owner":"Likes","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"likes/query.json","tagname":"method","owner":"Likes","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-query"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Likes API lets you add a \"like\" to an existing object. Currently, likes can only be added to\nthe following object types:</p>\n\n<ul>\n<li><a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a></li>\n<li><a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></li>\n<li><a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></li>\n<li><a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a></li>\n<li><a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a></li>\n<li><a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a></li>\n<li><a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a></li>\n</ul>\n\n\n<p>If an object has one or more likes associated to it, it will return a total\nlike count with the object:</p>\n\n<pre><code>\"likes_count\": 2\n</code></pre>\n\n<h2>Determining if the Current User Likes an Object</h2>\n\n<p>To determine if the current user has liked an ArrowDB object, use the <a href=\"#!/api/Likes-method-query\" rel=\"Likes-method-query\" class=\"docClass\">Likes.query</a>\nmethod to retrieve a list of objects the user liked.</p>\n\n<p>If you are executing a <code>query</code> or <code>show</code> method on the ArrowDB object, pass <code>show_user_like=true</code>\nas a parameter to the method. If the current user liked an object returned by\neither of those methods, the response object contains the field <code>\"current_user_liked: true\"</code>.</p>\n\n<p>See the REST API examples for the <a href=\"#!/api/Checkins-method-query\" rel=\"Checkins-method-query\" class=\"docClass\">Checkins.query</a>\nand <a href=\"#!/api/Checkins-method-show\" rel=\"Checkins-method-show\" class=\"docClass\">Checkins.show</a> methods for details.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-created_at' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><a href='#!/api/Likes-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Creation date for this liked object.</p>\n</div><div class='long'><p>Creation date for this liked object.</p>\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><a href='#!/api/Likes-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>Like Object ID.</p>\n</div><div class='long'><p>Like Object ID.</p>\n</div></div></div><div id='property-likeable_id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><a href='#!/api/Likes-property-likeable_id' class='name not-expandable'>likeable_id</a><span> : String</span></div><div class='description'><div class='short'><p>Object ID of the liked object.</p>\n</div><div class='long'><p>Object ID of the liked object.</p>\n</div></div></div><div id='property-likeable_type' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><a href='#!/api/Likes-property-likeable_type' class='name not-expandable'>likeable_type</a><span> : String</span></div><div class='description'><div class='short'><p>Object type of the liked object, which is the name of the object, such as <code>Post</code>, <code>Photo</code>, etc.</p>\n</div><div class='long'><p>Object type of the liked object, which is the name of the object, such as <code>Post</code>, <code>Photo</code>, etc.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><a href='#!/api/Likes-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Last update time for this liked object.</p>\n</div><div class='long'><p>Last update time for this liked object.</p>\n</div></div></div><div id='property-user' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><a href='#!/api/Likes-property-user' class='name not-expandable'>user</a><span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></span></div><div class='description'><div class='short'><p>User who generated the like.</p>\n</div><div class='long'><p>User who generated the like.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-create' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><strong class='http-method'>POST </strong><a href='#!/api/Likes-method-create' class='name expandable'>likes/create.json</a></div><div class='description'><div class='short'>Adds a \"like\" to an object. ...</div><div class='long'><p>Adds a \"like\" to an object. Currently, likes can only be associated with one of\nthe following object types, and a user can only like an object once:</p>\n\n<ul>\n<li><a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a></li>\n<li><a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></li>\n<li><a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></li>\n<li><a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a></li>\n<li><a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a></li>\n<li><a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a></li>\n<li><a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a></li>\n</ul>\n\n\n<p>Once an object has one or more likes attached to it, it will return a\ntotal like count with the object:</p>\n\n<pre><code>\"likes_count\": 2\n</code></pre>\n\n<p>You should specify one, and only one, ArrowDB object ID parameter to identify the target object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>post_id</span> : String<div class='sub-desc'><p>Post object to like.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>Photo object to like.</p>\n</div></li><li><span class='pre'>user_id</span> : String<div class='sub-desc'><p>User object to like.</p>\n</div></li><li><span class='pre'>event_id</span> : String<div class='sub-desc'><p>Event object to like.</p>\n</div></li><li><span class='pre'>place_id</span> : String<div class='sub-desc'><p>Place object to like.</p>\n</div></li><li><span class='pre'>checkin_id</span> : String<div class='sub-desc'><p>Checkin object to like.</p>\n</div></li><li><span class='pre'>status_id</span> : String<div class='sub-desc'><p>Status object to like.</p>\n</div></li><li><span class='pre'>review_id</span> : String<div class='sub-desc'><p>Review object to like.</p>\n</div></li><li><span class='pre'>custom_object_id</span> : String<div class='sub-desc'><p>Custom object to like.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>likes</span> : <a href=\"#!/api/Likes\" rel=\"Likes\" class=\"docClass\">Likes</a>[]<div class='sub-desc'><p>A single-element array, containing the \"like\" object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Requires Release 3.2.0. The following example increments the like count for the\nspecified Post object.</p>\n\n<pre><code>Cloud.Likes.create({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        var like = e.likes[0];\n        alert('Success:\\n' +\n            'id: ' + like.id + '\\n');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"post_id=4e33a817d9ca724745000003\" https://api.cloud.appcelerator.com/v1/likes/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"createLike\"\n  },\n  \"response\": {\n    \"likes\": [\n      {\n        \"id\": \"4e33a817d9ca724745000006\",\n        \"created_at\": \"2011-07-30T06:43:35+0000\",\n        \"updated_at\": \"2011-07-30T06:43:35+0000\",\n        \"user\": {\n          \"id\": \"4e33a817d9ca724745000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:43:35+0000\",\n          \"updated_at\": \"2011-07-30T06:43:35+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:\n    NSDictionary <em>data = @{@\"post_id\":@\"savedPostId\"};\n    [APSLikes create:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            NSArray <em>likes = e.response[@\"likes\"];\n            NSDictionary </em>like = likes[0];\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n\", like[@\"id\"]];</p>\n\n<pre><code>        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\n\ntry {\n    APSLikes.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSLikes\", \"ERROR: \" + e.message());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Likes-method-delete' class='name expandable'>likes/delete.json</a></div><div class='description'><div class='short'>Delete the like from the target object. ...</div><div class='long'><p>Delete the like from the target object. Only the original submitter can delete\nthe like.</p>\n\n<p>Specify one and only one of the ID parameters to identify  the target object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>post_id</span> : String<div class='sub-desc'><p>Post object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>Photo object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>user_id</span> : String<div class='sub-desc'><p>User object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>event_id</span> : String<div class='sub-desc'><p>Event object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>place_id</span> : String<div class='sub-desc'><p>Place object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>checkin_id</span> : String<div class='sub-desc'><p>Checkin object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>status_id</span> : String<div class='sub-desc'><p>Status object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>review_id</span> : String<div class='sub-desc'><p>Review object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>custom_object_id</span> : String<div class='sub-desc'><p>Custom object to delete \"like\" from.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Requires Release 3.2.0. The following example decrements the like count for the\nspecified post.</p>\n\n<pre><code>Cloud.Likes.remove({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/likes/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;post_id=4e33a817d9ca724745000003\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteLike\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:\n    NSDictionary <em>data = @{@\"post_id\":@\"savedPostId\"};\n    [APSLikes remove:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:nil\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\n\ntry {\n    APSLikes.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSLikes\", \"\" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSLikes\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Likes'>Likes</span></div><strong class='http-method'>GET </strong><a href='#!/api/Likes-method-query' class='name expandable'>likes/query.json</a></div><div class='description'><div class='short'>Performs custom query of likes with sorting and paginating. ...</div><div class='long'><p>Performs custom query of likes with sorting and paginating.</p>\n\n<p>You can either query the likes of an object using the object's ID,\nsuch as the <code>post_id</code>, <code>photo_id</code>, etc. parameter, or the likes generated by a user,\nby specifying the <code>user_id</code> parameter.</p>\n\n<p>A non-administrator user can only retrieve results on the likes they generated.</p>\n\n<p>Application administrators can retrieve results on the likes of all users and\nquery likes generated by other users by specifying the <code>user_id</code> parameter.</p>\n\n<p>In addition to custom fields, the following pre-defined fields can be used to\nquery and sort likes:</p>\n\n<ul>\n<li><code>su_id</code> : <code>String</code>. User ID of the User that generated the likes.\nOnly an application admininstrator can query likes of other users.</li>\n<li><code>likeable_type</code> : <code>String</code>. Object type of the like object, which is the name of the object,\nsuch as <code>Post</code>, <code>Photo</code>, etc.</li>\n<li><code>likeable_id</code> : <code>String</code>. Object ID of the like object.</li>\n<li><code>created_at</code> : <code>Date</code>. Timestamp when the like was created.</li>\n<li><code>updated_at</code> : <code>Date</code>. Timestamp when the like was last updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>post_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified Post object.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified Photo object.</p>\n</div></li><li><span class='pre'>event_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified Event object.</p>\n</div></li><li><span class='pre'>place_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified Place object.</p>\n</div></li><li><span class='pre'>checkin_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified Checkin object.</p>\n</div></li><li><span class='pre'>review_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified Review object.</p>\n</div></li><li><span class='pre'>custom_object_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified Custom object.</p>\n</div></li><li><span class='pre'>user_object_id</span> : String<div class='sub-desc'><p>Limit query to likes on the identified User object.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>Limit query to likes generated by the identified User.\nOnly an application administrator can query likes generated by other users.</p>\n</div></li><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>likes</span> : <a href=\"#!/api/Likes\" rel=\"Likes\" class=\"docClass\">Likes</a>[]<div class='sub-desc'><p>List of likes matching the query parameters.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This API is currently not supported by the ti.cloud module.</p>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Queries for status likes from the currently logged in user. If you are an administrator,\nyou will retrieve status likes from all users.</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET -d 'where={\"likeable_type\":\"Status\"}' \"https://api.cloud.appcelerator.com/v1/likes/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n    \"meta\": {\n        \"code\": 200,\n        \"status\": \"ok\",\n        \"method_name\": \"queryLikes\",\n        \"count\": 100\n    },\n    \"response\": {\n        \"likes\": [\n            {\n                \"id\": \"5397a2c35ceba6088b000003\",\n                \"created_at\": \"2014-06-11T00:28:51+0000\",\n                \"updated_at\": \"2014-06-11T00:28:51+0000\",\n                \"likeable_id\": \"5397a1db5ceba6088b000002\",\n                \"likeable_type\": \"Status\",\n                \"user\": {\n                    \"id\": \"53962f98d298520939000006\",\n                    \"created_at\": \"2014-06-09T22:05:12+0000\",\n                    \"updated_at\": \"2014-06-11T00:22:11+0000\",\n                    \"external_accounts\": [],\n                    \"confirmed_at\": \"2014-06-09T22:05:12+0000\",\n                    \"username\": \"joeuser\",\n                    \"admin\": \"false\",\n                    \"stats\": {\n                        \"photos\": {\n                            \"total_count\": 0\n                        },\n                        \"storage\": {\n                            \"used\": 0\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Use the [<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sendRequest:method:data:handler:\">APSCloud sendRequest</a>]\nmethod to invoke this REST API directly.</p>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Use the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloud.html#sendRequest%28java.lang.String,java.lang.String,java.util.Map,%20com.appcelerator.aps.APSResponseHandler%29\">APSCloud.sendRequest()</a>\nmethod to invoke this REST API directly.</p>\n</div></div></div></div></div></div></div></div></div>"});