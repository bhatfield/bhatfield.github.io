Ext.data.JsonP['GeoFences']({"tagname":"class","name":"GeoFences","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/GeoFences/query.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/GeoFences/count.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/GeoFences/create.yml"},{"filename":"update.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/GeoFences/update.yml"},{"filename":"GeoFences.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/GeoFences/GeoFences.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/GeoFences/delete.yml"}],"members":{"cfg":[],"property":[{"name":"created_at","tagname":"property","owner":"GeoFences","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"end_time","tagname":"property","owner":"GeoFences","meta":{"[:hide]":false},"id":"property-end_time"},{"name":"id","tagname":"property","owner":"GeoFences","meta":{"[:hide]":false},"id":"property-id"},{"name":"loc","tagname":"property","owner":"GeoFences","meta":{"[:hide]":false},"id":"property-loc"},{"name":"payload","tagname":"property","owner":"GeoFences","meta":{"[:hide]":false},"id":"property-payload"},{"name":"start_time","tagname":"property","owner":"GeoFences","meta":{"[:hide]":false},"id":"property-start_time"},{"name":"updated_at","tagname":"property","owner":"GeoFences","meta":{"[:hide]":false},"id":"property-updated_at"}],"method":[{"name":"geo_fences/count.json","tagname":"method","owner":"GeoFences","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"geo_fences/create.json","tagname":"method","owner":"GeoFences","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-create"},{"name":"geo_fences/delete.json","tagname":"method","owner":"GeoFences","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-delete"},{"name":"geo_fences/query.json","tagname":"method","owner":"GeoFences","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"},{"name":"geo_fences/update.json","tagname":"method","owner":"GeoFences","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p class=\"note\">The current user must be an application administrator to create, update or delete a geo-fence object.</p>\n\n\n<p>The GeoFences API lets you manage spatial objects with data. Use this API to have the device\nquery the ArrowDB server to retrieve data based on a location.</p>\n\n<p>To send a push notification based on the user's location, see the \"Location-Based Push\nNotification\" section in <a href=\"#!/api/PushNotifications\" rel=\"PushNotifications\" class=\"docClass\">PushNotifications</a>.</p>\n\n<h3>Parameters</h3>\n\n<p>Datetime fields use the ISO 8601 format, for example, <code>YYYY-MM-DDTHH:mm:ss+ZZZZ</code>.</p>\n\n<p>Geographic coordinates are specified as arrays with the longitude as the first element and latitude as the\nsecond element, that is, <code>[longitude,latitude]</code>.</p>\n\n<p>Distance is specified in radians. To calculate the distance in radians,\ndivide the distance you want by the approximate radius of the Earth in the same\nunits. For example, 10 miles is 10 / 3959, or 2 kilometers is 2 / 6371.</p>\n\n<h2>Getting Started</h2>\n\n<p>To use the GeoFences API, create geo-fence objects with data to download, then have the device\nperiodically check the ArrowDB server for this data.</p>\n\n<p>To create geo-fence objects, use the <a href=\"#!/api/GeoFences-method-create\" rel=\"GeoFences-method-create\" class=\"docClass\">create</a> method and specify the geographic\narea and data to download.</p>\n\n<p>After creating a geo-fence object, the device can periodically query the ArrowDB server to see if\nthere is any available data to retrieve. Use the <a href=\"#!/api/GeoFences-method-query\" rel=\"GeoFences-method-query\" class=\"docClass\">query</a> method to specify a\ngeospatial query with the <code>where</code> parameter.  If the query returns any results, the application\nneeds to process the <code>payload</code> field of the query response.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-created_at' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><a href='#!/api/GeoFences-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Date when the geo-fence was created.</p>\n</div><div class='long'><p>Date when the geo-fence was created.</p>\n</div></div></div><div id='property-end_time' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><a href='#!/api/GeoFences-property-end_time' class='name not-expandable'>end_time</a><span> : Date</span></div><div class='description'><div class='short'><p>Datetime when the geo-fence expires.</p>\n</div><div class='long'><p>Datetime when the geo-fence expires.</p>\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><a href='#!/api/GeoFences-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>Generated ID for this geo-fence.</p>\n</div><div class='long'><p>Generated ID for this geo-fence.</p>\n</div></div></div><div id='property-loc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><a href='#!/api/GeoFences-property-loc' class='name expandable'>loc</a><span> : Hash</span></div><div class='description'><div class='short'>JSON-encoded object describing the geographic perimeter of the geo-fence, specified as a circle with\na center point o...</div><div class='long'><p>JSON-encoded object describing the geographic perimeter of the geo-fence, specified as a circle with\na center point of either <code>place_id</code> or <code>coordinates</code> property and the <code>radius</code> property:</p>\n\n<ul>\n<li><code>place_id</code> (String): Use an ArrowDB <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object as the center of the circle. Specify the\nID of the Place.</li>\n<li><code>coordinates</code> (Array<Number>): Center coordinate of the circle.  Specify a point as <code>[longitude,latitude]</code>.</Number></li>\n<li><code>radius</code> (Number/String): Radius of the bounding circle in radians. To calculate the distance in radians,\ndivide the distance you want by the approximate radius of the Earth in the same\nunits. For example, 10 miles is 10 / 3959 or 2 kilometers is 2 / 6371.  Specify the\nfraction as a string, for example, <code>\"10/3959\"</code> or <code>\"2/6371\"</code>.</li>\n</ul>\n\n</div></div></div><div id='property-payload' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><a href='#!/api/GeoFences-property-payload' class='name not-expandable'>payload</a><span> : Hash</span></div><div class='description'><div class='short'><p>JSON-encoded data to retrieve if the geo-fence area intersects the device's location.</p>\n</div><div class='long'><p>JSON-encoded data to retrieve if the geo-fence area intersects the device's location.</p>\n</div></div></div><div id='property-start_time' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><a href='#!/api/GeoFences-property-start_time' class='name not-expandable'>start_time</a><span> : Date</span></div><div class='description'><div class='short'><p>Datetime when to start the geo-fence.</p>\n</div><div class='long'><p>Datetime when to start the geo-fence.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><a href='#!/api/GeoFences-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Date when the geo-fence was updated.</p>\n</div><div class='long'><p>Date when the geo-fence was updated.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-count' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><strong class='http-method'>GET </strong><a href='#!/api/GeoFences-method-count' class='name not-expandable'>geo_fences/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of GeoFence objects.</p>\n</div><div class='long'><p>Retrieves the total number of GeoFence objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of GeoFence objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of GeoFence objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"geofences/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/geo_fences/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"geofencesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of GeoFence objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"geofences/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of GeoFence objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"geofences/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><strong class='http-method'>POST </strong><a href='#!/api/GeoFences-method-create' class='name expandable'>geo_fences/create.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Creates a geo-fence object with an optional start and end time. ...</div><div class='long'><p>Creates a geo-fence object with an optional start and end time.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>geo_fence</span> : Hash <strong class=\"required signature\">required</strong><div class='sub-desc'><p>JSON object describing the geographic perimeter, data payload, and start and end time\nfor the geo-fence object.  Specify the following propertes:</p>\n\n<ul>\n<li><code>loc</code> (Hash): <strong>Required.</strong> Geographic perimeter.  See <a href=\"#!/api/GeoFences-property-loc\" rel=\"GeoFences-property-loc\" class=\"docClass\">loc</a>.</li>\n<li><code>payload</code> (Hash): <strong>Required.</strong> JSON-encoded data to retrieve if a device intersects\nthe geographic perimeter.</li>\n<li><code>start_time</code> (Date): Datetime to start the geo-fence.</li>\n<li><code>end_time</code> (Date): Datetime to end the geo-fence.</li>\n</ul>\n\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>geo_fences</span> : <a href=\"#!/api/GeoFences\" rel=\"GeoFences\" class=\"docClass\">GeoFences</a>[]<div class='sub-desc'><p>Single-element array containing the newly-created geo-fence object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Requires Titanium SDK 3.2.1 or later.</p>\n\n<p>The following example creates a geo-fence covering a ten-mile area with San\nFrancisco, CA, USA as the center point:</p>\n\n<pre><code>Cloud.GeoFences.create({\n    geo_fence: {\n        \"loc\":{\"coordinates\":[-122.4167,37.7833], \"radius\":\"10/3959\"},\n        \"payload\":{\"alert\":\"24-hour sale at our SF flagship store on 12/26!\"},\n        \"start_time\": \"2014-03-08T00:00\",\n        \"end_time\":\"2014-12-26T19:00\"\n    }\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e.geo_fences));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>The following example creates a geo-fence covering a ten-mile area with San\nFrancisco, CA, USA as the center point:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X POST -F 'geo_fence={\"loc\":{\"coordinates\":[-122.4167,37.7833], \"radius\":\"10/3959\"}, \"payload\":{\"alert\":\"24-hour sale at our SF flagship store on 12/26!\"}, \"start_time\":\"2013-12-25T00:00\",\"end_time\":\"2013-12-26T19:00\"}' \"http://api.cloud.appcelerator.com/v1/geo_fences/create.json?key=&lt;API_KEY&gt;\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createGeoFence\"\n  },\n  \"response\": {\n    \"geo_fences\": [\n      {\n        \"id\": \"52aa2da0d7de142e0e000040\",\n        \"start_time\": \"2013-12-25T00:00:00+0000\",\n        \"end_time\": \"2013-12-26T19:00:00+0000\",\n        \"loc\": {\n          \"coordinates\": [\n            -122.4167,\n            37.7833\n          ],\n          \"radius\": \"10/3959\"\n        },\n        \"payload\": {\n          \"alert\": \"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        \"created_at\": \"2013-12-12T21:41:52+0000\",\n        \"updated_at\": \"2013-12-12T21:41:52+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"geo_fence\": @{\n        @\"loc\": @{\n            @\"coordinates\": @[@-122.4167,@37.7833],\n            @\"radius\": @\"10/3959\"\n        },\n        @\"payload\": @{\n            @\"alert\":@\"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        @\"start_time\": @\"2014-03-08T00:00\",\n        @\"end_time\": @\"2014-12-26T19:00\"\n    }\n};\n\n[APSGeoFences create:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nJSONObject loc = new JSONObject(\"{'coordinates':[-122.4167,37.7833], 'radius':'10/3959'}\");\nJSONObject payload = new JSONObject(\"{'alert':'24-hour sale at our SF flagship store on 12/26!'}\");\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"loc\", loc);\ndata.put(\"payload\", payload);\ndata.put(\"start_time\", \"2014-03-08T00:00\");\ndata.put(\"end_time\", \"2014-12-26T19:00\");\n\ntry {\n    APSGeofences.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/GeoFences-method-delete' class='name expandable'>geo_fences/delete.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Deletes an existing geo-fence object. ...</div><div class='long'><p>Deletes an existing geo-fence object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the geo-fence object to delete.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Requires Titanium SDK 3.2.1 or later.</p>\n\n<pre><code>Cloud.GeoFences.remove({\n    id: geoFenceId\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl  -b cookies.txt -c cookies.txt -X DELETE -F 'id=52aa2da0d7de142e0e000040' \"http://api.cloud.appcelerator.com/v1/geo_fences/delete.json?key=&lt;API_KEY&gt;\"\n</code></pre>\n\n<p>Example cURL response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"destroyGeoFence\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"id\": geoFenceId\n};\n\n[APSGeoFences remove:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"52aa2da0d7de142e0e000040\");\n\ntry {\n    APSGeofences.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><strong class='http-method'>GET </strong><a href='#!/api/GeoFences-method-query' class='name expandable'>geo_fences/query.json</a></div><div class='description'><div class='short'>Perform custom query of geofences with sorting and paginating. ...</div><div class='long'><p>Perform custom query of geofences with sorting and paginating.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level for response data.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n\n<p>Response data may include references to other objects, which the server performs\nadditional queries on to include in the response. To reduce server response time,\nset this parameter to a lower value to reduce server API calls.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>A JSON-encoded object that defines the query used.</p>\n\n<p>The following fields can be used for the query:</p>\n\n<ul>\n<li><a href=\"#!/api/GeoFences-property-start_time\" rel=\"GeoFences-property-start_time\" class=\"docClass\">start_time</a></li>\n<li><a href=\"#!/api/GeoFences-property-end_time\" rel=\"GeoFences-property-end_time\" class=\"docClass\">end_time</a></li>\n<li><code>loc</code> : For this property, specify a\n<a href=\"http://docs.mongodb.org/manual/reference/operator/query-geospatial/\">MongoDB Geospatial Query</a>.</li>\n</ul>\n\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>geo_fences</span> : <a href=\"#!/api/GeoFences\" rel=\"GeoFences\" class=\"docClass\">GeoFences</a>[]<div class='sub-desc'><p>List of geo-fence objects matching the query parameters.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Requires Titanum SDK 3.2.1 or later.</p>\n\n<p>This example searches for geo-fences within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>Cloud.GeoFences.query({\n    where:{\n        \"loc\": {\n            \"$nearSphere\" : {\n                \"$geometry\" : { \"type\" : \"Point\", \"coordinates\" : [-122.2708,37.8044] },\n                    \"$maxDistance\" : 2000\n                }\n            }\n    }\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e.geo_fences));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>This example searches for geo-fences within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X GET -F 'where={\"loc\": { \"$nearSphere\" : { \"$geometry\" : { \"type\" : \"Point\" , \"coordinates\" : [-122.2708,37.8044] } , \"$maxDistance\" : 2000 }}}' \"http://api.cloud.appcelerator.com/v1/geo_fences/query.json?key=&lt;API_KEY&gt;&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryGeoFence\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"geo_fences\": [\n      {\n        \"id\": \"52aa2ebbd7de142e0e000041\",\n        \"start_time\": \"2013-12-25T00:00:00+0000\",\n        \"end_time\": \"2013-12-26T19:00:00+0000\",\n        \"loc\": {\n          \"radius\": \"10/3959\",\n          \"coordinates\": [\n            -122.4167,\n            37.7833\n          ]\n        },\n        \"payload\": {\n          \"alert\": \"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        \"created_at\": \"2013-12-12T21:46:35+0000\",\n        \"updated_at\": \"2013-12-12T22:41:38+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"where\": @{\n        @\"loc\": @{\n            @\"$nearSphere\": @{\n                @\"$geometry\": @{ \n                    @\"type\": @\"Point\", \n                    @\"coordinates\": @[@-122.2708, @37.8044] \n                },\n                @\"$maxDistance\" : @2000\n            }\n        }\n    }\n};\n\n[APSGeoFences query:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu geo_fences\", (unsigned long)((NSArray *) e.response[@\"geo_fences\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"'loc': { '$nearSphere' : { '$geometry' : { 'type' : 'Point' , 'coordinates' : [-122.2708,37.8044] } , '$maxDistance' : 2000 }}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSGeofences.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray geo_fences = e.getResponse().getJSONArray(\"geo_fences\");\n                    if (geo_fences.length() &lt;= 0) {\n                        Log.i(\"APSGeofences\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject geo_fence = geo_fences.getJSONObject(i);\n                            Log.i(\"APSGeofences\", geofence.getJSONObject(\"payload\").toString());\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSGeofences\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GeoFences'>GeoFences</span></div><strong class='http-method'>POST </strong><a href='#!/api/GeoFences-method-update' class='name expandable'>geo_fences/update.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Updates an existing geo-fence object. ...</div><div class='long'><p>Updates an existing geo-fence object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the geo-fence object to update.</p>\n</div></li><li><span class='pre'>geo_fence</span> : Hash<div class='sub-desc'><p>JSON object describing the geographic perimeter, data payload, and start and end time\nfor the geo-fence object.  Specify the following propertes:</p>\n\n<ul>\n<li><code>loc</code> (Hash): <strong>Required.</strong> Geographic perimeter.  See <a href=\"#!/api/GeoFences-property-loc\" rel=\"GeoFences-property-loc\" class=\"docClass\">loc</a>.</li>\n<li><code>payload</code> (Hash): JSON-encoded data to retrieve if a device intersects the geographic\nperimeter.</li>\n<li><code>start_time</code> (Date): Datetime to start the geo-fence.</li>\n<li><code>end_time</code> (Date): Datetime to end the geo-fence.</li>\n</ul>\n\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>geo_fences</span> : <a href=\"#!/api/GeoFences\" rel=\"GeoFences\" class=\"docClass\">GeoFences</a>[]<div class='sub-desc'><p>Single-element array containing the updated geo-fence object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Requires Titanium SDK 3.2.1 or later.</p>\n\n<pre><code>Cloud.GeoFences.update({\n    id: geoFenceId\n    geo_fence:{\"loc\":{\"place_id\":\"531a1217447d300f05003b69\",\"radius\":\"2/6371\"}}\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e.geo_fences));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl  -b cookies.txt -c cookies.txt -X PUT -F 'id=52aa2da0d7de142e0e000040' -F 'geo_fence={\"loc\":{\"place_id\":\"52aa310765fe160b3f000042\",\"radius\":\"2/6371\"}}' \"http://api.cloud.appcelerator.com/v1/geo_fences/update.json?key=&lt;API_KEY&gt;\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateGeoFence\"\n  },\n  \"response\": {\n    \"geo_fences\": [\n      {\n        \"id\": \"52aa2da0d7de142e0e000040\",\n        \"start_time\": \"2013-12-25T00:00:00.000Z\",\n        \"end_time\": \"2013-12-26T19:00:00.000Z\",\n        \"loc\": {\n          \"radius\": \"2/6378\",\n          \"coordinates\": [\n            0,\n            0\n          ],\n          \"place\": {\n            \"id\":  \"52aa310765fe160b3f000042\",\n            \"name\": \"pointOne\",\n            \"created_at\": \"2013-12-12T18:41:52.000Z\",\n            \"updated_at\": \"2013-12-12T18:01:18.000Z\",\n            \"latitude\": 0,\n            \"longitude\": 0,\n            \"custom_fields\": {\n              \"coordinates\": []\n            }\n        },\n        \"payload\": {\n          \"alert\": \"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        \"created_at\": \"2013-12-12T21:41:52.000Z\",\n        \"updated_at\": \"2013-12-12T22:01:18.000Z\"\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"id\": geoFenceId,\n    @\"geo_fence\": @{\n        @\"loc\": @{\n            @\"place_id\": @\"531a1217447d300f05003b69\",\n            @\"radius\": @\"2/6371\"\n        }\n    }\n};\n\n[APSGeoFences update:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nJSONObject geo_fence = new JSONObject(\"{'loc':{'place_id':'52aa310765fe160b3f000042','radius':'2/6371'}}\");\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"52aa2da0d7de142e0e000040\");\ndata.put(\"geo_fence\", geo_fence);\n\ntry {\n    APSGeofencess.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});