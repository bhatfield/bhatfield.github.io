Ext.data.JsonP['Chats']({"tagname":"class","name":"Chats","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"Chats.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Chats/Chats.yml"},{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Chats/query.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Chats/count.yml"},{"filename":"chatgroup.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Chats/chatgroup.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Chats/create.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Chats/delete.yml"}],"members":{"cfg":[],"property":[{"name":"chatgroup","tagname":"property","owner":"Chats","meta":{"[:hide]":false},"id":"property-chatgroup"},{"name":"created_at","tagname":"property","owner":"Chats","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"custom_fields","tagname":"property","owner":"Chats","meta":{"[:hide]":false},"id":"property-custom_fields"},{"name":"id","tagname":"property","owner":"Chats","meta":{"[:hide]":false},"id":"property-id"},{"name":"message","tagname":"property","owner":"Chats","meta":{"[:hide]":false},"id":"property-message"},{"name":"photo","tagname":"property","owner":"Chats","meta":{"[:hide]":false},"id":"property-photo"},{"name":"updated_at","tagname":"property","owner":"Chats","meta":{"[:hide]":false},"id":"property-updated_at"}],"method":[{"name":"chats/count.json","tagname":"method","owner":"Chats","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"chats/create.json","tagname":"method","owner":"Chats","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-create"},{"name":"chats/delete.json","tagname":"method","owner":"Chats","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"chats/get_chat_groups.json","tagname":"method","owner":"Chats","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-get_chat_groups"},{"name":"chats/query.json","tagname":"method","owner":"Chats","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Chats API provides methods for sending chat messages from one user to another user,\nor to a group of users called a <em>chat group</em>.</p>\n\n<p>Chat groups are formed implicitly when users send chat messages. For example, if\nuser A sends a message to users B and C, a chat group is formed with users A, B, and\nC. If user C subsequently sends a message to user B, a second chat group is formed with users B\nand C as members.</p>\n\n<p>If you have configured push notifications for your application, you can optionally\nspecify to a send push notifications to message recipients' devices as well.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-chatgroup' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><a href='#!/api/Chats-property-chatgroup' class='name not-expandable'>chatgroup</a><span> : Hash</span></div><div class='description'><div class='short'><p>The chat group that the chat belongs to.</p>\n</div><div class='long'><p>The chat group that the chat belongs to.</p>\n</div></div></div><div id='property-created_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><a href='#!/api/Chats-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Creation date for this user object.</p>\n</div><div class='long'><p>Creation date for this user object.</p>\n</div></div></div><div id='property-custom_fields' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><a href='#!/api/Chats-property-custom_fields' class='name expandable'>custom_fields</a><span> : String/Hash</span></div><div class='description'><div class='short'>User defined fields. ...</div><div class='long'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><a href='#!/api/Chats-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>Generated unique ID for this chat message.</p>\n</div><div class='long'><p>Generated unique ID for this chat message.</p>\n</div></div></div><div id='property-message' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><a href='#!/api/Chats-property-message' class='name not-expandable'>message</a><span> : String</span></div><div class='description'><div class='short'><p>Chat message.</p>\n</div><div class='long'><p>Chat message.</p>\n</div></div></div><div id='property-photo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><a href='#!/api/Chats-property-photo' class='name not-expandable'>photo</a><span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></span></div><div class='description'><div class='short'><p>New photo to attach to the chat message.</p>\n</div><div class='long'><p>New photo to attach to the chat message.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><a href='#!/api/Chats-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Last update time for this user object.</p>\n</div><div class='long'><p>Last update time for this user object.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-count' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><strong class='http-method'>GET </strong><a href='#!/api/Chats-method-count' class='name not-expandable'>chats/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of Chat objects.</p>\n</div><div class='long'><p>Retrieves the total number of Chat objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of Chat objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of Chat objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"chats/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/chats/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"chatsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of Chat objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"chats/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of Chat objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"chats/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><strong class='http-method'>POST </strong><a href='#!/api/Chats-method-create' class='name expandable'>chats/create.json</a></div><div class='description'><div class='short'>Sends a chat message to another user or a group of users. ...</div><div class='long'><p>Sends a chat message to another user or a group of users.</p>\n\n<p>Sending a message creates a new chat group if there is no existing chat group\ncontaining the current user and the designated recipients.</p>\n\n<p>To generate a push notification, include the <code>channel</code> and\n<code>payload</code> parameters.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>to_ids</span> : String<div class='sub-desc'><p>Comma-separated list of user ID(s) to receive the message. The current user ID and <code>to_ids</code>\ntogether determine which chat group a message belongs to. The chat group is\ncreated if necessary.</p>\n\n<p>You must specify either a <code>to_ids</code> list or the <code>chat_group_id</code> for an existing\nchat group.</p>\n</div></li><li><span class='pre'>chat_group_id</span> : String<div class='sub-desc'><p>Identifies an existing chat group by ID. If you already know the id\nof a <a href=\"#!/api/Chats-property-chatgroup\" rel=\"Chats-property-chatgroup\" class=\"docClass\">chat group</a>, you can use it to specify\nwhich chat group this message should go to.</p>\n\n<p>You must specify either a <code>to_ids</code> list or the <code>chat_group_id</code> for an existing\nchat group.</p>\n</div></li><li><span class='pre'>message</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Message to send.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to attach to the chat message.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to attach to the chat message.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>channel</span> : String<div class='sub-desc'><p>Channel for a push notification.</p>\n\n<p>To send a push notification to the recipients after a new chat\nmessage is created, you can pass in the <code>channel</code> and <code>payload</code> parameters.\nFor more information, see <a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">PushNotifications.notify</a>.</p>\n</div></li><li><span class='pre'>payload</span> : String/Hash<div class='sub-desc'><p>Message payload for push notification.</p>\n\n<p>The message defined in <code>payload</code> will be delivered to all the recipients as long\nas they have <a href=\"#!/api/PushNotifications-method-subscribe\" rel=\"PushNotifications-method-subscribe\" class=\"docClass\">subscribed</a> to the specified channel.</p>\n\n<p>For example, if all of your app's users are subscribed to channel \"Chat\", then\nyou can pass channel -- \"Chat\", and payload:</p>\n\n<pre><code>{\n    \"from\": \"sender user_id\",\n    \"message\": \"Hello everyone!\",\n    \"sound\": \"default\",\n     \"alert\" : \"From Joe: Hello everyone!\"\n}\n</code></pre>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>Send on behalf of the identified user.</p>\n\n<p>Current user must be an application admin to send a message on behalf of\nanother user.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>To receive a list of participant IDs, set <code>response_json_depth</code> to <strong>2</strong>.\nIf you have already cached all the user objects participating\nin the chat group and wish to receive a smaller JSON response, you can set\n<code>response_json_depth</code> to <strong>1</strong> to remove participant user's info from chat group in\nthe JSON response.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>chats</span> : <a href=\"#!/api/Chats\" rel=\"Chats\" class=\"docClass\">Chats</a>[]<div class='sub-desc'><p>Single-element array containing the new chat message.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example sends a chat message to a list of users and checks the response.</p>\n\n<pre><code>Cloud.Chats.create({\n    to_ids: ids.join(','),\n    message: 'Good morning'\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.chats.length; i++) {\n            var chat = e.chats[i];\n            alert('Success:\\n' +\n                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\\n' +\n                'Updated: ' + chat.updated_at + '\\n' +\n                'Message: ' + chat.message);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request with <code>response_json_depth</code> set to <em>2</em>:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"message=What's up?\" -F \"photo=@photo.jpg\" -F \"to_ids=54ac083d03545008a500037b,54ac085f035450089a0003ac\" \"http://api.cloud.appcelerator.com/v1/chats/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;response_json_depth=2&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createChatMessage\"\n  },\n  \"response\": {\n    \"chats\": [\n      {\n        \"id\": \"54ac1ba354f9d309ff000032\",\n        \"created_at\": \"2015-01-06T17:30:12+0000\",\n        \"updated_at\": \"2015-01-06T17:30:12+0000\",\n        \"message\": \"Hi again\",\n        \"from\": {\n          \"id\": \"54ac18aa035450089a0003c3\",\n          \"created_at\": \"2015-01-06T17:17:30+0000\",\n          \"updated_at\": \"2015-01-06T17:17:30+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2015-01-06T17:17:30+0000\",\n          \"username\": \"user124\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          },\n          \"friend_counts\": {\n            \"requests\": 0,\n            \"friends\": 0\n          }\n        },\n        \"photo\": {\n          \"id\": \"54ac1ba354f9d309ff000033\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 302481,\n          \"md5\": \"897273d704b02dec5d069749e2f23d12\",\n          \"created_at\": \"2015-01-06T17:30:12+0000\",\n          \"updated_at\": \"2015-01-06T17:30:12+0000\",\n          \"processed\": false,\n          \"content_type\": \"image/jpeg\",\n          \"user_id\": \"54ac18aa035450089a0003c3\"\n        },\n        \"chat_group\": {\n          \"id\": \"54ac19ae03545008a50003aa\",\n          \"created_at\": \"2015-01-06T17:21:50+0000\",\n          \"updated_at\": \"2015-01-06T17:30:12+0000\",\n          \"message\": \"Hi again\",\n          \"participate_ids\": [\n            \"54ac083d03545008a500037b\",\n            \"54ac085f035450089a0003ac\",\n            \"54ac18aa035450089a0003c3\"\n          ]\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"to_ids\": @[@\"4edef6f7d9ca7247b8000004\", @\"4edf0c20d9ca724a82000003\"],\n    @\"message\": @\"Good morning\"\n};\n\n[APSChats create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"to_ids\", \"4edef6f7d9ca7247b8000004,4edf0c20d9ca724a82000003\");\ndata.put(\"message\", \"Hello!\");\n\ntry {\n    APSChats.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Chat sent!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Chats-method-delete' class='name expandable'>chats/delete.json</a></div><div class='description'><div class='short'>Deletes a chat message. ...</div><div class='long'><p>Deletes a chat message.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>chat_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the chat message to delete.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User to delete the Chat object on behalf of. The user must be the sender of the chat\nmessage.</p>\n\n<p>Current user must be an application admin to send a message on behalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Requires Release 3.2.0.</p>\n\n<pre><code>Cloud.Chats.remove({\n    chat_id: savedChatId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"http://api.cloud.appcelerator.com/v1/chats/delete.json?key=&lt;YOUR API APP KEY&gt;&amp;chat_id=4d8bc645d0afbe0363000013\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteChat\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"chat_id\": savedChatId\n};\n\n[APSChats remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"chat_id\", \"4d713b4f6f70951043000001\");\n\ntry {\n    APSChats.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Chat removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-get_chat_groups' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><strong class='http-method'>GET </strong><a href='#!/api/Chats-method-get_chat_groups' class='name expandable'>chats/get_chat_groups.json</a></div><div class='description'><div class='short'>Lists chat groups. ...</div><div class='long'><p>Lists chat groups.</p>\n\n<p>If user A sends chat message to user B and C, users A, B and C automatically\nform a chat group. Use this API to get a list of chat groups the current user\nbelongs to.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>where</span> : String<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.\nSee the <a href=\"#!/guide/search_query\">Search and Query guide</a> for more information.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.\nSee the <a href=\"#!/guide/search_query\">Search and Query guide</a> for more information.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in JSON response.\nTo reduce server API calls the JSON response may\ninclude, in addition to the objects returned by the query, other important data related\nto the returned objects, such as object's owner or referencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>chat_groups</span> : Hash[]<div class='sub-desc'><p>List of chat groups. Each chat group entry has the following fields:</p>\n\n<ul>\n<li><p><code>id</code>. ID of the chat group.</p></li>\n<li><p><code>created_at</code>. Timestamp when the first message in the chat group was sent.</p></li>\n<li><p><code>updated_at</code>.  Timestamp of the most recent message in the chat group.</p></li>\n<li><p><code>participate_users</code>. List of <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> objects for the users in the\n chat group.</p></li>\n</ul>\n\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a lists of chat groups that the current user belongs to and checks\nthe response.</p>\n\n<pre><code>Cloud.Chats.getChatGroups(function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.chat_groups.length; i++) {\n            var group = e.chat_groups[i];\n            alert('Success:\\n' +\n                'id: ' + group.id + '\\n' +\n                'created_at: ' + group.created_at + '\\n' +\n                'number of users: ' + group.participate_users.length);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>Get a list of chat groups the current user belongs to, sorted by groups with most recent activity first.\n$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/chats/get_chat_groups.json?order=-updated_at&amp;key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"getChatGroups\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 3\n  },\n  \"response\": {\n    \"chat_groups\": [\n      {\n        \"id\": \"4ee04f4dd9ca72680d000009\",\n        \"created_at\": \"2011-12-08T05:46:53+0000\",\n        \"updated_at\": \"2011-12-08T05:46:53+0000\",\n        \"participate_users\": [\n          {\n            \"id\": \"4ee04f4cd9ca72680d000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000003\",\n            \"first_name\": \"Alice\",\n            \"last_name\": \"Gal\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"alice\",\n            \"email\": \"alice@gal.com\"\n          }\n        ]\n      },\n      {\n        \"id\": \"4ee04f4dd9ca72680d000017\",\n        \"created_at\": \"2011-12-08T05:46:53+0000\",\n        \"updated_at\": \"2011-12-08T05:46:53+0000\",\n        \"participate_users\": [\n          {\n            \"id\": \"4ee04f4cd9ca72680d000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000003\",\n            \"first_name\": \"Alice\",\n            \"last_name\": \"Gal\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"alice\",\n            \"email\": \"alice@gal.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000004\",\n            \"first_name\": \"Joe\",\n            \"last_name\": \"Guy\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"joe\",\n            \"email\": \"joe@guy.com\"\n          }\n        ]\n      },\n      {\n        \"id\": \"4ee04f4dd9ca72680d000012\",\n        \"created_at\": \"2011-12-08T05:46:53+0000\",\n        \"updated_at\": \"2011-12-08T05:46:53+0000\",\n        \"participate_users\": [\n          {\n            \"id\": \"4ee04f4cd9ca72680d000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000004\",\n            \"first_name\": \"Joe\",\n            \"last_name\": \"Guy\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"joe\",\n            \"email\": \"joe@guy.com\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSChats getChatGroups:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu groups\", (unsigned long)((NSArray *) e.response[@\"chat_groups\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSChats.getChatGroups(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject chat_groups = e.getResponse().getJSONArray(\"chat_groups\");\n                    // Do something with the chat_groups array\n                } catch (JSONException err) {\n                    Log.e(\"APSChats\", \"Exception thrown: \" + err.toString())\n                }\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Chats'>Chats</span></div><strong class='http-method'>GET </strong><a href='#!/api/Chats-method-query' class='name expandable'>chats/query.json</a></div><div class='description'><div class='short'>Performs a custom query of chat messages with sorting and pagination. ...</div><div class='long'><p>Performs a custom query of chat messages with sorting and pagination. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>participate_ids</span> : String<div class='sub-desc'><p>Comma-separated list of user ID(s) of the users belonging to a chat group. You can use\nthis field to narrow down a query to a certain chat group. The current user can\nonly query chat messages in chat groups he or she is participating in.</p>\n\n<p>For example, suppose that users A, B and C form one chat group, and users B and C form a second chat group without A.\nUser A does not have permission to query chats in the chat group that consists of\nonly users B and C.</p>\n\n<p>You must specify either a <code>participate_ids</code> list or the <code>chat_group_id</code> of an existing\nchat group to query.</p>\n</div></li><li><span class='pre'>chat_group_id</span> : String<div class='sub-desc'><p>A chat group's id. Instead of using a <code>participate_ids</code> list, if you already\nknow the id of a chat group, you can use it to narrow down a query.</p>\n\n<p>You must specify either a <code>participate_ids</code> list or the <code>chat_group_id</code> of an existing\nchat group to query.</p>\n</div></li><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>You can query any of the standard values for a Chat object, as well as any\ncustom fields that contain simple values, such as String, Number or Boolean\nvalues.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>chats</span> : <a href=\"#!/api/Chats\" rel=\"Chats\" class=\"docClass\">Chats</a>[]<div class='sub-desc'><p>List of chat objects matching the query.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a list of chat messages and checks the response.</p>\n\n<pre><code>Cloud.Chats.query({\n    participate_ids: ids.join(','),\n    where: {\n        updated_at: { '$gt': last_update_time }\n    }\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.chats.length; i++) {\n            var chat = e.chats[i];\n            alert('Success:\\n' +\n                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\\n' +\n                'Updated: ' + chat.updated_at + '\\n' +\n                'Message: ' + chat.message);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request. Assuming each chat message has an\n<a href=\"#!/guide/customfields-section-geographic-coordinates-in-custom-fields\">assigned geo location</a>,\nthe following finds all chat messages among users Bob (id: 4ee05d69d9ca726b85000002),\nAlice (id: 4ee05d69d9ca726b85000003), and userJoe (id: 4ee05d69d9ca726b85000004) sent\nafter 2011-11-17T22:53:48+0000, and within 5 miles of latitude 37.12 and longitude -122.23.\nNote that you need to convert miles to radians (5/3959 = 0.00126).</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'participate_ids=4ee05d69d9ca726b85000002,4ee05d69d9ca726b85000003,4ee05d69d9ca726b85000004' --data-urlencode 'where={\"created_at\":{\"$gte\":\"2011-11-17T22:53:48+0000\"}, \"coordinates\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' --data-urlencode 'order=created_at' \"https://api.cloud.appcelerator.com/v1/chats/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;count=true&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryChatMessages\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"chats\": [\n      {\n        \"id\": \"4ee05d6ad9ca726b85000018\",\n        \"created_at\": \"2011-12-08T06:47:06+0000\",\n        \"updated_at\": \"2011-12-08T06:47:06+0000\",\n        \"message\": \"What's up?\",\n         \"custom_fields\": {\n           \"coordinates\": [-122.23, 37.12] }\n         },\n        \"from\": {\n          \"id\": \"4ee05d69d9ca726b85000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-12-08T06:47:05+0000\",\n          \"updated_at\": \"2011-12-08T06:47:06+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"chat_group\": {\n          \"id\": \"4ee05d6ad9ca726b85000017\",\n          \"created_at\": \"2011-12-08T06:47:06+0000\",\n          \"updated_at\": \"2011-12-08T06:47:06+0000\",\n          \"participate_users\": [\n            {\n              \"id\": \"4ee05d69d9ca726b85000002\",\n              \"first_name\": \"Bob\",\n              \"last_name\": \"Dude\",\n              \"created_at\": \"2011-12-08T06:47:05+0000\",\n              \"updated_at\": \"2011-12-08T06:47:06+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"username\": \"bob\",\n              \"email\": \"bob@dude.com\"\n            },\n            {\n              \"id\": \"4ee05d69d9ca726b85000003\",\n              \"first_name\": \"Alice\",\n              \"last_name\": \"Gal\",\n              \"created_at\": \"2011-12-08T06:47:05+0000\",\n              \"updated_at\": \"2011-12-08T06:47:05+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"username\": \"alice\",\n              \"email\": \"alice@gal.com\"\n            },\n            {\n              \"id\": \"4ee05d69d9ca726b85000004\",\n              \"first_name\": \"Joe\",\n              \"last_name\": \"Guy\",\n              \"created_at\": \"2011-12-08T06:47:05+0000\",\n              \"updated_at\": \"2011-12-08T06:47:05+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"username\": \"joe\",\n              \"email\": \"joe@guy.com\"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"participate_ids\": @[@\"4edef6f7d9ca7247b8000004\", @\"4edf0c20d9ca724a82000003\"],\n    @\"where\": @{\n        @\"updated_at\": @{\n            @\"$gt\": @\"2013-12-26T19:00:00+0000\"\n        }\n    }\n};\n\n[APSChats query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu groups\", (unsigned long)((NSArray *) e.response[@\"chats\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:\n    APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');</p>\n\n<pre><code>HashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\ndata.put(\"participate_ids\", \"4ee05d69d9ca726b85000002,4ee05d69d9ca726b85000003,4ee05d69d9ca726b85000004\");\ndata.put(\"order\", \"created_at\");\n\ntry {\n    APSChats.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray chats = e.getResponse().getJSONArray(\"chats\");\n                    if (chats.length() &lt;= 0) {\n                        Log.i(\"APSChats\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; chats.length(); i++) {\n                            JSONObject chat = chat.getJSONObject(i);\n                            Log.i(\"APSChats\", chat.getString(\"message\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSChats\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});