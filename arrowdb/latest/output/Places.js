Ext.data.JsonP['Places']({"tagname":"class","name":"Places","alternateClassNames":[],"mixins":["Reviewable"],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/query.yml"},{"filename":"batch_delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/batch_delete.yml"},{"filename":"show.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/show.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/count.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/create.yml"},{"filename":"update.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/update.yml"},{"filename":"Places.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/Places.yml"},{"filename":"search.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/search.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Places/delete.yml"}],"members":{"cfg":[],"property":[{"name":"acls","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-acls"},{"name":"address","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-address"},{"name":"city","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-city"},{"name":"country","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-country"},{"name":"custom_fields","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-custom_fields"},{"name":"latitude","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-latitude"},{"name":"longitude","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-longitude"},{"name":"name","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-name"},{"name":"phone_number","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-phone_number"},{"name":"photo","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-photo"},{"name":"postal_code","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-postal_code"},{"name":"ratings_average","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_average"},{"name":"ratings_count","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_count"},{"name":"ratings_summary","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_summary"},{"name":"reviews","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-reviews"},{"name":"reviews_count","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-reviews_count"},{"name":"state","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-state"},{"name":"tags","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-tags"},{"name":"twitter","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-twitter"},{"name":"user","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-user"},{"name":"website","tagname":"property","owner":"Places","meta":{"[:hide]":false},"id":"property-website"}],"method":[{"name":"places/batch_delete.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-batch_delete"},{"name":"places/count.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"places/create.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-create"},{"name":"places/delete.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"places/query.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"},{"name":"places/search.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-search"},{"name":"places/show.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-show"},{"name":"places/update.json","tagname":"method","owner":"Places","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Places API provides methods to create and manage places. A place can be specified using a street address or\ngeographic coordinates.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-acls' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-acls' class='name not-expandable'>acls</a><span> : <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a>[]</span></div><div class='description'><div class='short'><p>Single-element array containing the ACL associated with this object, if any.</p>\n</div><div class='long'><p>Single-element array containing the ACL associated with this object, if any.</p>\n</div></div></div><div id='property-address' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-address' class='name not-expandable'>address</a><span> : String</span></div><div class='description'><div class='short'><p>Address.</p>\n</div><div class='long'><p>Address.</p>\n</div></div></div><div id='property-city' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-city' class='name not-expandable'>city</a><span> : String</span></div><div class='description'><div class='short'><p>City.</p>\n</div><div class='long'><p>City.</p>\n</div></div></div><div id='property-country' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-country' class='name not-expandable'>country</a><span> : String</span></div><div class='description'><div class='short'><p>Country.</p>\n</div><div class='long'><p>Country.</p>\n</div></div></div><div id='property-custom_fields' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-custom_fields' class='name expandable'>custom_fields</a><span> : String/Hash</span></div><div class='description'><div class='short'>User defined fields. ...</div><div class='long'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></div></div><div id='property-latitude' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-latitude' class='name not-expandable'>latitude</a><span> : Number</span></div><div class='description'><div class='short'><p>Latitude.</p>\n</div><div class='long'><p>Latitude.</p>\n</div></div></div><div id='property-longitude' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-longitude' class='name not-expandable'>longitude</a><span> : Number</span></div><div class='description'><div class='short'><p>Longitude.</p>\n</div><div class='long'><p>Longitude.</p>\n</div></div></div><div id='property-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-name' class='name not-expandable'>name</a><span> : String</span></div><div class='description'><div class='short'><p>Place name.</p>\n</div><div class='long'><p>Place name.</p>\n</div></div></div><div id='property-phone_number' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-phone_number' class='name not-expandable'>phone_number</a><span> : String</span></div><div class='description'><div class='short'><p>Phone number.</p>\n</div><div class='long'><p>Phone number.</p>\n</div></div></div><div id='property-photo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-photo' class='name not-expandable'>photo</a><span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></span></div><div class='description'><div class='short'><p>Primary photo for this place.</p>\n</div><div class='long'><p>Primary photo for this place.</p>\n</div></div></div><div id='property-postal_code' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-postal_code' class='name not-expandable'>postal_code</a><span> : String</span></div><div class='description'><div class='short'><p>Postal or ZIP code.</p>\n</div><div class='long'><p>Postal or ZIP code.</p>\n</div></div></div><div id='property-ratings_average' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_average' class='name expandable'>ratings_average</a><span> : Number</span></div><div class='description'><div class='short'>Average rating for this object. ...</div><div class='long'><p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n</div></div></div><div id='property-ratings_count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_count' class='name expandable'>ratings_count</a><span> : Number</span></div><div class='description'><div class='short'>Total number of reviews for this object that include a rating. ...</div><div class='long'><p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-ratings_summary' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_summary' class='name expandable'>ratings_summary</a><span> : Hash</span></div><div class='description'><div class='short'>Breakdown of the number of reviews that specified a given rating value. ...</div><div class='long'><p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-reviews' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-reviews' class='name expandable'>reviews</a><span> : <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>[]</span></div><div class='description'><div class='short'>List of reviews for this object. ...</div><div class='long'><p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-reviews_count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-reviews_count' class='name expandable'>reviews_count</a><span> : Number</span></div><div class='description'><div class='short'>Total number of reviews for this object. ...</div><div class='long'><p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-state' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-state' class='name not-expandable'>state</a><span> : String</span></div><div class='description'><div class='short'><p>State.</p>\n</div><div class='long'><p>State.</p>\n</div></div></div><div id='property-tags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-tags' class='name not-expandable'>tags</a><span> : String[]</span></div><div class='description'><div class='short'><p>List of tags for this object.</p>\n</div><div class='long'><p>List of tags for this object.</p>\n</div></div></div><div id='property-twitter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-twitter' class='name not-expandable'>twitter</a><span> : String</span></div><div class='description'><div class='short'><p>Twitter ID.</p>\n</div><div class='long'><p>Twitter ID.</p>\n</div></div></div><div id='property-user' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-user' class='name not-expandable'>user</a><span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></span></div><div class='description'><div class='short'><p>Owner of this place object.</p>\n</div><div class='long'><p>Owner of this place object.</p>\n</div></div></div><div id='property-website' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><a href='#!/api/Places-property-website' class='name not-expandable'>website</a><span> : String</span></div><div class='description'><div class='short'><p>Website.</p>\n</div><div class='long'><p>Website.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-batch_delete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Places-method-batch_delete' class='name expandable'>places/batch_delete.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Deletes Places objects that match the query constraints provided in the where parameter. ...</div><div class='long'><p>Deletes Places objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Places objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>Any <a href=\"#!/api/Places-property-photo\" rel=\"Places-property-photo\" class=\"docClass\">primary photos</a> associated with the matched objects are not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Encoded JSON object that specifies constraint values for Places objects to delete.\nIf not specified, all Places objects are deleted.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'>\n</div><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to delete all Place objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"places/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Place objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/places/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to delete all Place objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"places/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Place object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to delete all Place objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"places/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Place objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>GET </strong><a href='#!/api/Places-method-count' class='name not-expandable'>places/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of Place objects.</p>\n</div><div class='long'><p>Retrieves the total number of Place objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of Place objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of Places objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"places/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/places/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"placesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of Place objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"places/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of Place objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"places/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>POST </strong><a href='#!/api/Places-method-create' class='name expandable'>places/create.json</a></div><div class='description'><div class='short'>Creates a new place object. ...</div><div class='long'><p>Creates a new place object.</p>\n\n<p>To create a place, you must specify at least one of the following:\naddress, city, state, postal_code, country, or geographical coordinates (longitude and latitude).</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Place name.</p>\n</div></li><li><span class='pre'>address</span> : String<div class='sub-desc'><p>Address.</p>\n</div></li><li><span class='pre'>city</span> : String<div class='sub-desc'><p>City.</p>\n</div></li><li><span class='pre'>state</span> : String<div class='sub-desc'><p>State.</p>\n</div></li><li><span class='pre'>postal_code</span> : String<div class='sub-desc'><p>Postal or ZIP code.</p>\n</div></li><li><span class='pre'>country</span> : String<div class='sub-desc'><p>Country.</p>\n</div></li><li><span class='pre'>latitude</span> : Number<div class='sub-desc'><p>Latitude.</p>\n</div></li><li><span class='pre'>longitude</span> : Number<div class='sub-desc'><p>Longitude.</p>\n</div></li><li><span class='pre'>website</span> : String<div class='sub-desc'><p>Website URL.</p>\n</div></li><li><span class='pre'>twitter</span> : String<div class='sub-desc'><p>Twitter ID.</p>\n</div></li><li><span class='pre'>phone_number</span> : String<div class='sub-desc'><p>Phone number.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to attach as the primary photo for this place.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to attach as the primary photo for this place.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated list of tags for this place.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to create this place on behalf of.</p>\n\n<p>The current login user must be an application admin to create a place on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>places</span> : <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>[]<div class='sub-desc'><p>Single-element array containing the newly-created place.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example creates a new place and checks the response.</p>\n\n<pre><code>Cloud.Places.create({\n    name: 'Appcelerator HQ',\n    state: 'California',\n    website: 'http://www.appcelerator.com'\n}, function (e) {\n    if (e.success) {\n        var place = e.places[0];\n        alert('Success:\\n' +\n            'id: ' + place.id + '\\n' +\n            'name: ' + place.name + '\\n' +\n            'updated_at: ' + place.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=Appcelerator Cloud Services\" -F \"photo=@photo.jpg\" -F \"address=58 South Park Ave.\" -F \"city=San Francisco\" -F \"state=California\" -F \"postal_code=94107-1807\" -F \"country=United States\" -F \"latitude=37.782227\" -F \"longitude=-122.393159\" -F \"twitter=acs\" -F \"website=http://cocoafish.com\" https://api.cloud.appcelerator.com/v1/places/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createPlace\"\n  },\n  \"response\": {\n    \"places\": [\n      {\n        \"id\":\"4d8910aed0afbe0e4e000006\",\n        \"name\":\"Appcelerator Cloud Services\",\n        \"created_at\":\"2011-03-22T21:12:14+0000\",\n        \"updated_at\":\"2011-03-22T21:12:14+0000\",\n        \"address\":\"58 South Park Ave.\",\n        \"city\":\"San Francisco\",\n        \"state\":\"California\",\n        \"postal_code\":\"94107-1807\",\n        \"country\":\"United States\",\n        \"website\":\"http://www.appcelerator.com\",\n        \"twitter\":\"acs\",\n        \"lat\":37.782227,\n        \"lng\":-122.393159,\n        \"photo\": {\n          \"id\":\"4dcf261cd0afbe1833000002\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-05-15T01:02:20+0000\",\n          \"updated_at\":\"2011-05-15T01:02:20+0000\",\n          \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"name\"   : @\"Party Pictures\",\n                         @\"state\"  : @\"California\",\n                         @\"website\": @\"http://www.appcelerator.com\"\n                      };\n[APSPlaces create:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        NSDictionary *place = places[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                place[@\"id\"],\n                                place[@\"name\"],\n                                place[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal static Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"Appcelerator, Inc.\");\ndata.put(\"address\", \"440 N. Bernardo Avenue\");\ndata.put(\"city\", \"Mountain View\");\ndata.put(\"state\", \"California\");\ndata.put(\"latitude\", \"37.3890223\");\ndata.put(\"longitude\", \"-122.0502723\");\n\ntry {\n    APSPlaces.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created \")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Places-method-delete' class='name expandable'>places/delete.json</a></div><div class='description'><div class='short'>Deletes a place. ...</div><div class='long'><p>Deletes a place.</p>\n\n<p>Only the user who created the place can delete it.</p>\n\n<p>The <a href=\"#!/api/Places-property-photo\" rel=\"Places-property-photo\" class=\"docClass\">primary photo</a> associated with the object is not deleted.</p>\n\n<p>An application admin can delete any Place object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>place_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the place to delete.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to delete the Place object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to delete a Place object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example deletes a place and checks the response.</p>\n\n<pre><code>Cloud.Places.remove({\n    place_id: savedPlaceId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/places/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d51d4186f70952d4c000006\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deletePlace\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"place_id\"   : @\"savedPlaceID\"\n                      };\n[APSPlaces remove:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:nil\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d8910aed0afbe0e4e000006\");\n\ntry {\n    APSPlaces.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"Removed!\");\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>GET </strong><a href='#!/api/Places-method-query' class='name expandable'>places/query.json</a></div><div class='description'><div class='short'>Performs custom query of places with sorting and paginating. ...</div><div class='long'><p>Performs custom query of places with sorting and paginating. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>The following fields can be used for querying and sorting places:</p>\n\n<ul>\n<li><code>address</code> : String.  Place address.</li>\n<li><code>city</code> : String.  Place city.</li>\n<li><code>state</code> : String. Place state.</li>\n<li><code>country</code> : String.  Country.</li>\n<li><code>user_id</code> : String. ID of the user who created this place.</li>\n<li><code>google_cid</code> : Google Customer ID (CID) associated with this place.</li>\n<li><code>tags_array</code> : String. Search tags.</li>\n<li><code>lnglat</code> : <code>[longitude, latitude]</code>. The Place's default coordinates. You can also store\n custom coordinates in a custom field and query for those coordinates separately\n (see <a href=\"#!/guide/customfields-section-geographic-coordinates-in-custom-fields\">Geographic Coordinates in Custom Fields</a>).</li>\n<li><code>ratings_average:  Number</code>.  Place's average rating (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>ratings_count: Number</code>. Place's total number of ratings (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>reviews_count: Number</code>. Place's total number of reviews (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>created_at: Date</code>. Timestamp when the photo was created.</li>\n<li><code>updated_at: Date</code>. Timestamp when the photo was updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong>, each Place object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>places</span> : <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>[]<div class='sub-desc'><p>List of places matching the query criteria.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a list of places and checks the response.</p>\n\n<pre><code>Cloud.Places.query({\n    page: 1,\n    per_page: 20,\n    where: {\n        lnglat: {\n            '$nearSphere': [-122.23,37.12],\n            '$maxDistance': 0.00126\n        }\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.places.length);\n        for (var i = 0; i &lt; e.places.length; i++) {\n            var place = e.places[i];\n            alert('id: ' + place.id + '\\n' +\n                  'name: ' + place.name + '\\n' +\n                  'longitude: ' + place.longitude + '\\n' +\n                  'latitude: ' + place.latitude + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request that queries places with name \"Appcelerator Cloud Services\" near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"Appcelerator Cloud Services\",\"lnglat\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/places/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryPlaces\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"places\": [\n      {\n        \"id\":\"4d2e399b6f70951b6f000013\",\n        \"name\":\"Maya Restaurant\",\n        \"created_at\":\"2011-01-12T23:30:35+0000\",\n        \"updated_at\":\"2011-01-12T23:30:35+0000\",\n        \"address\":\"303 2nd Street\",\n        \"city\":\"San Francisco\",\n        \"state\":\"CA\",\n        \"country\":\"United States\",\n        \"phone\":\"(415) 543-2928\",\n        \"lat\":37.12,\n        \"lng\":-122.23\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"page\"   : @1,\n                         @\"per_page\"  : @20,\n                         @\"where\": {\n                                    @\"lnglat\": {\n                                        @\"$nearSphere\": @[@-122.23, @37.12],\n                                        @\"$maxDistance\": @0.00126\n                                    }\n                                }\n                      };\n[APSPlaces query:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        for (NSDictionary * place in places) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                    place[@\"id\"],\n                                    place[@\"name\"],\n                                    place[@\"updated_at\"]];\n\n            NSLog(@\"%@\", message);\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nJSONObject params = new JSONObject(\"{'name': 'Appcelerator, Inc.','lnglat':{'$nearSphere': [-122.23,37.12], '$maxDistance': 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSPlaces.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    places = e.getResponse().getJSONArray(\"places\");\n                    final ArrayList&lt;String&gt; objectsList = new ArrayList&lt;String&gt;();\n                    for (int i = 0; i &lt; places.length(); i++) {\n                        Log.i(\"APSPlaces\", places.getJSONObject(i).get(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        Log.i(\"APSPlaces\", \"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSPlaces\", e.toString());\n                }\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-search' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>GET </strong><a href='#!/api/Places-method-search' class='name expandable'>places/search.json</a></div><div class='description'><div class='short'>Returns the list of places that have been added to the app, sorted by search\nrelevancy. ...</div><div class='long'><p>Returns the list of places that have been added to the app, sorted by search\nrelevancy.</p>\n\n<p>Optionally, <code>latitude</code> and <code>longitude</code> can be given to return the list of\nplaces starting from a particular location. To bound the results within a\ncertain radius (in km) from the starting coordinates, add the <code>distance</code>\nparameter. <code>q</code> can be given to search by place name.</p>\n\n<p>If you have provided a starting latitude and longitude for place search, each\nresult will return a distance to the starting point in km.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>latitude</span> : Number<div class='sub-desc'><p>Latitude to center search on.</p>\n</div></li><li><span class='pre'>longitude</span> : Number<div class='sub-desc'><p>Longitude to center search on.</p>\n</div></li><li><span class='pre'>distance</span> : Number<div class='sub-desc'><p>Distance in km to search from the identified center point.</p>\n</div></li><li><span class='pre'>q</span> : String<div class='sub-desc'><p>Space-separated list of keywords used to perform full text search on place name and tags.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>places</span> : <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>[]<div class='sub-desc'><p>List of places matching the search criteria.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example searches for places and checks the response.</p>\n\n<pre><code>Cloud.Places.search({\n    latitude: lat,\n    longitude: lon\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.places.length);\n        for (var i = 0; i &lt; e.places.length; i++) {\n            var place = e.places[i];\n            alert('id: ' + place.id + '\\n' +\n                  'name: ' + place.name + '\\n' +\n                  'longitude: ' + place.longitude + '\\n' +\n                  'latitude: ' + place.latitude + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/places/search.json?key=&lt;YOUR_APP_KEY&gt;&amp;latitude=37.743722&amp;longitude=-122.393159&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchPlaces\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":2\n  },\n  \"response\": {\n    \"places\": [\n      {\n        \"id\":\"4d2e399b6f70951b6f000013\",\n        \"name\":\"Maya Restaurant\",\n        \"created_at\":\"2011-01-12T23:30:35+0000\",\n        \"updated_at\":\"2011-01-12T23:30:35+0000\",\n        \"address\":\"303 2nd Street\",\n        \"city\":\"San Francisco\",\n        \"state\":\"CA\",\n        \"country\":\"United States\",\n        \"phone\":\"(415) 543-2928\",\n        \"latitude\": 37.743722,\n        \"longitude\": -122.421978,\n        \"distance\": 2.53\n      },\n      {\n        \"id\":\"4d2e45ab6f70951b6f00003d\",\n        \"name\":\"Farolito Taqueria\",\n        \"created_at\":\"2011-01-13T00:22:03+0000\",\n        \"updated_at\":\"2011-01-13T00:22:03+0000\",\n        \"address\":\"2779 Mission Street\",\n        \"city\":\"San Francisco\",\n        \"state\":\"CA\",\n        \"country\":\"United States\",\n        \"phone\":\"(415) 824-7877\",\n        \"latitude\": 37.782227,\n        \"longitude\": -122.393159,\n        \"distance\": 4.28\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"latitude\"   : latitude,\n                         @\"longitude\"  : longitude\n                      };\n[APSPlaces search:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        for (NSDictionary * place in places) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                    place[@\"id\"],\n                                    place[@\"name\"],\n                                    place[@\"updated_at\"]];\n\n            NSLog(@\"%@\", message);\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\n// Create dictionary of parameters to be passed with the request\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"latitude\", \"37.3890223\");\ndata.put(\"longitude\", \"-122.0502723\");\n\ntry {\n    APSPlaces.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray places = e.getResponse().getJSONArray(\"places\");\n                    for (int i = 0; i &lt; places.length(); i++) {\n                        Log.i(\"APSPlaces\", places.getJSONObject(i).getString(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        objectsList.add(\"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSPlaces\", e.toString());\n                }\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>GET </strong><a href='#!/api/Places-method-show' class='name expandable'>places/show.json</a></div><div class='description'><div class='short'>Returns information for the identified place. ...</div><div class='long'><p>Returns information for the identified place.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>place_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the place to show.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the identified object, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong> the Place object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>places</span> : <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>[]<div class='sub-desc'><p>Single-element array containing the identified place object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves information about a place and checks the response.</p>\n\n<pre><code>Cloud.Places.show({\n    place_id: savedPlaceId\n}, function (e) {\n    if (e.success) {\n        var place = e.places[0];\n        alert('Success:\\n' +\n            'id: ' + place.id + '\\n' +\n            'name: ' + place.name + '\\n' +\n            'updated_at: ' + place.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/places/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d6f13e96f70953608000012\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showPlace\"\n  },\n  \"response\": {\n    \"places\": [\n      {\n          \"id\":\"4d6f13e96f70953608000012\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-03T04:07:05+0000\",\n          \"updated_at\":\"2011-03-03T04:07:05+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"lat\":37.784732,\n          \"lng\":-122.395441\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"place_id\"   : @\"savedPlaceID\"\n                      };\n[APSPlaces show:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        NSDictionary *place = places[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                place[@\"id\"],\n                                place[@\"name\"],\n                                place[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\n// Create dictionary of parameters to be passed with the request\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", 4d6f13e96f70953608000012);\n\ntry {\n    APSPlaces.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSPlaces\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSPlaces\", e.toString());\n                }\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Places'>Places</span></div><strong class='http-method'>PUT </strong><a href='#!/api/Places-method-update' class='name expandable'>places/update.json</a></div><div class='description'><div class='short'>Any of the parameters used to Create a Place can\nbe used to update it as well. ...</div><div class='long'><p>Any of the parameters used to <a href=\"#!/api/Places-method-create\" rel=\"Places-method-create\" class=\"docClass\">Create a Place</a> can\nbe used to update it as well. Only the user that created the place can update\nit.</p>\n\n<p>An application admin can update any place object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>place_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the place to delete.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Place name.</p>\n</div></li><li><span class='pre'>address</span> : String<div class='sub-desc'><p>Address.</p>\n</div></li><li><span class='pre'>city</span> : String<div class='sub-desc'><p>City.</p>\n</div></li><li><span class='pre'>state</span> : String<div class='sub-desc'><p>State.</p>\n</div></li><li><span class='pre'>postal_code</span> : String<div class='sub-desc'><p>Postal or ZIP code.</p>\n</div></li><li><span class='pre'>country</span> : String<div class='sub-desc'><p>Country.</p>\n</div></li><li><span class='pre'>latitude</span> : Number<div class='sub-desc'><p>Latitude.</p>\n</div></li><li><span class='pre'>longitude</span> : Number<div class='sub-desc'><p>Longitude.</p>\n</div></li><li><span class='pre'>website</span> : String<div class='sub-desc'><p>Website URL.</p>\n</div></li><li><span class='pre'>twitter</span> : String<div class='sub-desc'><p>Twitter ID.</p>\n</div></li><li><span class='pre'>phone_number</span> : String<div class='sub-desc'><p>Phone number.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to attach as the primary photo for this place.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to attach as the primary photo for this place.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated list of tags for this place.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>user_id</span> : String<div class='sub-desc'><p>User ID to assign as the owner of the place object. The current user must have write\naccess to the object in order to update the owner.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to update the Place object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to update a Place object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>places</span> : <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>[]<div class='sub-desc'><p>Single-element array containing the updated object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example updates a place and checks the response.</p>\n\n<pre><code>Cloud.Places.update({\n    place_id: savedPlaceId,\n    city: 'Mountain View'\n}, function (e) {\n    if (e.success) {\n        var place = e.places[0];\n        alert('Success:\\n' +\n            'id: ' + place.id + '\\n' +\n            'name: ' + place.name + '\\n' +\n            'updated_at: ' + place.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"address=210 Market Street\" -F \"place_id=4d8910aed0afbe0e4e000006\" https://api.cloud.appcelerator.com/v1/places/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updatePlace\"\n  },\n  \"response\": {\n    \"places\": [\n      {\n          \"id\":\"4d8910aed0afbe0e4e000006\",\n          \"name\":\"Appcelerator Cloud Services\",\n          \"created_at\":\"2011-03-22T21:12:14+0000\",\n          \"updated_at\":\"2011-03-24T18:12:01+0000\",\n          \"address\":\"201 Market St.\",\n          \"city\":\"San Francisco\",\n          \"state\":\"California\",\n          \"country\":\"United States\",\n          \"website\":\"appcelerator.com\",\n          \"twitter\":\"acs\",\n          \"latitude\":37.782227,\n          \"longitude\":-122.393159\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"place_id\" : @\"savedPlaceID\",\n                         @\"city\"     : @\"Mountain View\"\n                      };\n[APSPlaces update:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        NSDictionary *place = places[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                place[@\"id\"],\n                                place[@\"name\"],\n                                place[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\n// Create dictionary of parameters to be passed with the request\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d8910aed0afbe0e4e000006\");\ndata.put(\"name\", \"Cocoafish, Inc.\");\ndata.put(\"city\", \"Beijing\");\n\ntry {\n    APSPlaces.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});