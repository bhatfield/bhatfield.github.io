Ext.data.JsonP['Clients']({"tagname":"class","name":"Clients","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"Clients.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Clients/Clients.yml"},{"filename":"geolocate.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Clients/geolocate.yml"}],"members":{"cfg":[],"property":[],"method":[{"name":"clients/geolocate.json","tagname":"method","owner":"Clients","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-geolocate"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Clients API lets you lookup a user location based on IP address if the\nuser's device fails to provide location information.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-geolocate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Clients'>Clients</span></div><strong class='http-method'>GET </strong><a href='#!/api/Clients-method-geolocate' class='name expandable'>clients/geolocate.json</a></div><div class='description'><div class='short'>Provides location data about the mobile device or computer your app is\nrunning on based on its IP address. ...</div><div class='long'><p>Provides location data about the mobile device or computer your app is\nrunning on based on its IP address. This feature uses <a href=\"https://www.maxmind.com/app/ip-location\">MaxMind\nGeoIP</a> to return the most accurate\nIP-based geolocation data possible. Note that the results are not not based on\nGPS signals nor WiFi triangulation commonly used on mobile devices. See\n<a href=\"https://www.maxmind.com/app/city_accuracy\">MaxMind GeoIP city accuracy</a> for\nmore information. An example use of this data is to verify the country that\nthe app user in, so that access can be given to application data.</p>\n\n<p>An error will be returned of the location cannot be determined from the IP\naddress. A successful lookup will return at minimum a <a href=\"https://www.maxmind.com/app/iso3166\">ISO 3166 country\ncode</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ip_address</span> : String<div class='sub-desc'><p>Alternate IP address to lookup instead of using the device's own address.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>ip_address</span> : String<div class='sub-desc'><p>Device IP address.</p>\n</div></li><li><span class='pre'>location</span> : Hash<div class='sub-desc'><p>Device's approximate location, represented as an object with the following\nproperties:</p>\n\n<ul>\n<li><code>latitude</code> : <code>Number</code></li>\n<li><code>longitude</code> : <code>Number</code></li>\n<li><code>city</code> : <code>String</code></li>\n<li><code>state</code> : <code>String</code></li>\n<li><code>postal_code</code> : <code>String</code></li>\n<li><code>country_code</code> : <code>String</code></li>\n</ul>\n\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example locates a client and checks the response.</p>\n\n<pre><code>Cloud.Clients.geolocate({\n    ip_address: clientIPAddress\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'ip_address: ' + e.ip_address + '\\n' +\n            'latitude: ' + e.location.latitude + '\\n' +\n            'longitude: ' + e.location.longitude);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/clients/geolocate.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"geolocateClient\"\n  },\n  \"response\": {\n    \"ip_address\": \"184.72.37.109\",\n    \"location\": {\n      \"country_code\": \"US\",\n      \"city\": \"Seattle\",\n      \"state\": \"WA\",\n      \"postal_code\": \"98144\",\n      \"latitude\": 47.5839,\n      \"longitude\": -122.2995\n    }\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"ip_address\": clientIPAddress\n};\n\n[APSClients geolocate:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSDictionary *loc = e.response[@\"location\"];\n        NSString *message = [NSString stringWithFormat:@\"lat: %@ lon: %@\", loc[@\"latitude\"], loc[@\"longitude\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSClients.geolocate(null, new APSResponseHandler() {\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSClients\", e.getResponseString());\n                } catch (APSCloudException err1) {\n                    Log.e(\"APSClients\", err1.toString());\n                }\n            } else {\n                Log.e(\"APSClients\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSClients\", e.toString());\n        }\n    });\n} catch (APSCloudException err2) {\n    Log.e(\"APSClients\", err2.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});