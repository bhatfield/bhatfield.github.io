Ext.data.JsonP['Events']({"tagname":"class","name":"Events","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/query.yml"},{"filename":"batch_delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/batch_delete.yml"},{"filename":"show.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/show.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/count.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/create.yml"},{"filename":"update.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/update.yml"},{"filename":"query_occurrences.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/query_occurrences.yml"},{"filename":"show_occurrences.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/show_occurrences.yml"},{"filename":"search_occurrences.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/search_occurrences.yml"},{"filename":"Events.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/Events.yml"},{"filename":"search.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/search.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Events/delete.yml"}],"members":{"cfg":[],"property":[{"name":"acls","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-acls"},{"name":"created_at","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"custom_fields","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-custom_fields"},{"name":"details","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-details"},{"name":"duration","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-duration"},{"name":"ical","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-ical"},{"name":"id","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-id"},{"name":"name","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-name"},{"name":"photo","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-photo"},{"name":"place","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-place"},{"name":"recurring","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-recurring"},{"name":"recurring_count","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-recurring_count"},{"name":"recurring_until","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-recurring_until"},{"name":"start_time","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-start_time"},{"name":"tags","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-tags"},{"name":"updated_at","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-updated_at"},{"name":"user","tagname":"property","owner":"Events","meta":{"[:hide]":false},"id":"property-user"}],"method":[{"name":"events/batch_delete.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-batch_delete"},{"name":"events/count.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"events/create.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-create"},{"name":"events/delete.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"events/query.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"},{"name":"events/query/occurrences.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query_occurrences"},{"name":"events/search.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-search"},{"name":"events/search/occurrences.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-search_occurrences"},{"name":"events/show.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-show"},{"name":"events/show/occurrences.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-show_occurrences"},{"name":"events/update.json","tagname":"method","owner":"Events","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Events API provides methods to create and manage events. Events can be one-time or recurring.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-acls' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-acls' class='name not-expandable'>acls</a><span> : <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a>[]</span></div><div class='description'><div class='short'><p>Array of ACLs associated with this object.</p>\n</div><div class='long'><p>Array of ACLs associated with this object.</p>\n</div></div></div><div id='property-created_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Event creation timestamp.</p>\n</div><div class='long'><p>Event creation timestamp.</p>\n</div></div></div><div id='property-custom_fields' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-custom_fields' class='name expandable'>custom_fields</a><span> : Hash</span></div><div class='description'><div class='short'>User defined fields. ...</div><div class='long'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></div></div><div id='property-details' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-details' class='name not-expandable'>details</a><span> : String</span></div><div class='description'><div class='short'><p>Description of the event.</p>\n</div><div class='long'><p>Description of the event.</p>\n</div></div></div><div id='property-duration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-duration' class='name not-expandable'>duration</a><span> : Number</span></div><div class='description'><div class='short'><p>Event duration, in seconds.</p>\n</div><div class='long'><p>Event duration, in seconds.</p>\n</div></div></div><div id='property-ical' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-ical' class='name not-expandable'>ical</a><span> : String</span></div><div class='description'><div class='short'><p>Event time and recurrence in iCalendar (RFC 5545) format.</p>\n</div><div class='long'><p>Event time and recurrence in iCalendar (RFC 5545) format.</p>\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>Generated unique ID for this event.</p>\n</div><div class='long'><p>Generated unique ID for this event.</p>\n</div></div></div><div id='property-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-name' class='name not-expandable'>name</a><span> : String</span></div><div class='description'><div class='short'><p>Event name.</p>\n</div><div class='long'><p>Event name.</p>\n</div></div></div><div id='property-photo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-photo' class='name not-expandable'>photo</a><span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></span></div><div class='description'><div class='short'><p>Primary photo for the event.</p>\n</div><div class='long'><p>Primary photo for the event.</p>\n</div></div></div><div id='property-place' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-place' class='name not-expandable'>place</a><span> : <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></span></div><div class='description'><div class='short'><p>Event location.</p>\n</div><div class='long'><p>Event location.</p>\n</div></div></div><div id='property-recurring' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-recurring' class='name expandable'>recurring</a><span> : String</span></div><div class='description'><div class='short'>Recurrence schedule. ...</div><div class='long'><p>Recurrence schedule. Can take the following values: \"daily\", \"weekly\", \"monthly\", or \"yearly\".</p>\n</div></div></div><div id='property-recurring_count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-recurring_count' class='name not-expandable'>recurring_count</a><span> : Number</span></div><div class='description'><div class='short'><p>Number of occurrences for the event.</p>\n</div><div class='long'><p>Number of occurrences for the event.</p>\n</div></div></div><div id='property-recurring_until' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-recurring_until' class='name not-expandable'>recurring_until</a><span> : Date</span></div><div class='description'><div class='short'><p>Date of last recurrence.</p>\n</div><div class='long'><p>Date of last recurrence.</p>\n</div></div></div><div id='property-start_time' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-start_time' class='name not-expandable'>start_time</a><span> : Date</span></div><div class='description'><div class='short'><p>Event start time.</p>\n</div><div class='long'><p>Event start time.</p>\n</div></div></div><div id='property-tags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-tags' class='name not-expandable'>tags</a><span> : String[]</span></div><div class='description'><div class='short'><p>Array of tags associated with this event.</p>\n</div><div class='long'><p>Array of tags associated with this event.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Event modification timestamp.</p>\n</div><div class='long'><p>Event modification timestamp.</p>\n</div></div></div><div id='property-user' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><a href='#!/api/Events-property-user' class='name not-expandable'>user</a><span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></span></div><div class='description'><div class='short'><p>Event owner.</p>\n</div><div class='long'><p>Event owner.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-batch_delete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Events-method-batch_delete' class='name expandable'>events/batch_delete.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Deletes Events objects that match the query constraints provided in the where parameter. ...</div><div class='long'><p>Deletes Events objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Events objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>Any <a href=\"#!/api/Events-property-place\" rel=\"Events-property-place\" class=\"docClass\">Place</a> associated with the matched objects are not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Encoded JSON object that specifies constraint values for Events objects to delete.\nIf not specified, all Events objects are deleted.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to delete all Event objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"events/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Event objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/events/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to delete all Event objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"events/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Event object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to delete all Event objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"events/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Event objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>GET </strong><a href='#!/api/Events-method-count' class='name not-expandable'>events/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of Event objects.</p>\n</div><div class='long'><p>Retrieves the total number of Event objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of Event objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of Event objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"events/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"eventsCount\",\n    \"count\": 1\n   }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of Event objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"events/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of Event objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"events/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>POST </strong><a href='#!/api/Events-method-create' class='name expandable'>events/create.json</a></div><div class='description'><div class='short'>Create an event. ...</div><div class='long'><p>Create an event. Times given with time zones other than UTC (for example PST\nduring daylight savings is -0700) will be converted to UTC. An ical string\nwill be returned to represent the occurrences of the event.</p>\n\n<p>For the event that is set as a recurring event, once created, there will be\nseveral \"event occurrences\" created associating with the event object on\nserver side, one \"event occurrence\" represents a single occurrence of the\nrecurring event. An \"event occurrence\" contains start and end time of the\nevent's occurrence which are calculated according to the \"recurring\" settings\nof the event object.</p>\n\n<p>Instead of computing actual individual occurrences of a recurring event on the\nclient side, you can use event occurrences query api to get a list of\noccurrences associated of a repeating event.</p>\n\n<p>To get all occurrences for a recurring event object, you can call <a href=\"#!/api/Events-method-show_occurrences\" rel=\"Events-method-show_occurrences\" class=\"docClass\">show_occurrences</a>\nevent occurrence](/docs/api/v1/events/show_occurrences) and pass in the\nevent's <code>id</code>.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Event name.</p>\n</div></li><li><span class='pre'>start_time</span> : Date <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Event start time.</p>\n</div></li><li><span class='pre'>details</span> : String<div class='sub-desc'><p>Description of the event.</p>\n</div></li><li><span class='pre'>duration</span> : Number<div class='sub-desc'><p>Event duration, in seconds.</p>\n</div></li><li><span class='pre'>recurring</span> : String<div class='sub-desc'><p>Recurrance schedule. Can take the following values: \"daily\", \"weekly\", \"monthly\", or \"yearly\".</p>\n\n<p>Must be used together with <code>recurring_count</code> or <code>recurring_until</code> to limit the\nnumber of occurances. The total number of occurrences of an event in either\ncase is limited to 1000.</p>\n</div></li><li><span class='pre'>recurring_count</span> : Number<div class='sub-desc'><p>Number of occurrences for the event.</p>\n</div></li><li><span class='pre'>recurring_until</span> : Date<div class='sub-desc'><p>Date of last recurrance.</p>\n</div></li><li><span class='pre'>place_id</span> : String<div class='sub-desc'><p>ID for the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> where the event takes place.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to attach as the primary photo for the event.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to attach as the primary photo for the event.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this event.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this event.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma-separated list of tags associated with this event.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to create the event on behalf of.</p>\n\n<p>The current login user must be an application admin to create an event on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>[]<div class='sub-desc'><p>Single-element array containing the newly-created event.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example creates a new event and checks the response.</p>\n\n<pre><code>Cloud.Events.create({\n    name: 'Celebration',\n    start_time: starttime,\n    duration: 3600,\n    recurring: 'monthly',\n    recurring_count: 5\n}, function (e) {\n    if (e.success) {\n        var event = e.events[0];\n        alert('Success:\\n' +\n            'id: ' + event.id + '\\n' +\n            'name: ' + event.name + '\\n' +\n            'updated_at: ' + event.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=Appcelerator Meetup Group\" -F \"photo=@photo.jpg\" -F \"place_id=4d7e62d6d0afbe04170000a4\" -F \"start_time=2011-03-22T20:59:50+0000\" -F \"duration=3600\" https://api.cloud.appcelerator.com/v1/events/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createEvent\"\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\":\"4d870f8bd0afbe1074000017\",\n        \"name\":\"Appcelerator Meetup Group\",\n        \"created_at\":\"2011-03-21T08:42:51+0000\",\n        \"updated_at\":\"2011-03-21T08:42:51+0000\",\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"duration\": 3600,\n        \"created_at\": \"2011-09-12T20:07:23+0000\",\n        \"updated_at\": \"2011-09-12T20:07:23+0000\",\n        \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=WEEKLY;COUNT=10\",\n        \"recurring\": \"weekly\",\n        \"recurring_count\": 10,\n        \"num_occurrences\": 10,\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        },\n        \"photo\": {\n          \"id\":\"4dcf5385d0afbe1833000009\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-05-15T04:16:05+0000\",\n          \"updated_at\":\"2011-05-15T04:16:05+0000\",\n          \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"name\": @\"Celebration\",\n      @\"start_time\": @\"2011-05-15T04:16:05+0000\",\n      @\"duration\": @3600,\n      @\"recurring\": @\"monthly\",\n      @\"recurring_count\": @5\n};\n\n[APSEvents create:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"start_time\", \"2011-03-22T20:59:50+0000\");\ndata.put(\"duration\", \"3600\");\ndata.put(\"name\", \"Appcelerator Meetup Group\");\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Events-method-delete' class='name expandable'>events/delete.json</a></div><div class='description'><div class='short'>Delete the event with the given id. ...</div><div class='long'><p>Delete the event with the given <code>id</code>. Only the original submitter can delete\nthe event.</p>\n\n<p>The <a href=\"#!/api/Events-property-place\" rel=\"Events-property-place\" class=\"docClass\">Place</a> associated with the object is not deleted.</p>\n\n<p>Application Admin can delete any Event object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the event to delete.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User to delete the Event object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to delete an Event object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example deletes a event and checks the response.</p>\n\n<pre><code>Cloud.Events.remove({\n    event_id: savedEventId\n}, function (e) {\n    if (e.success) {\n        alert('Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/events/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;event_id=4d86d26ed0afbe107400000f\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteEvent\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"event_id\": savedEventId\n};\n\n[APSEvents remove:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSEvents\", \"Removed!\");\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSClientError e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>GET </strong><a href='#!/api/Events-method-query' class='name expandable'>events/query.json</a></div><div class='description'><div class='short'>Perform custom query of events with sorting and paginating. ...</div><div class='long'><p>Perform custom query of events with sorting and paginating. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>In addition to the custom fields, you can query the following event fields:</p>\n\n<table>\n    <tr>\n        <th>Name</th>\n    <th>Type</th>\n        <th>Summary</th>\n    </tr>\n  <tr>\n    <td><code>name</code></td>\n    <td>String</td>\n    <td>Event's name</td>\n  </tr>\n  <tr>\n    <td><code>user_id</code></td>\n    <td>String</td>\n    <td>Event owner's user ID</td>\n  </tr>\n  <tr>\n    <td><code>place_id</code></td>\n    <td>String</td>\n    <td>If an event belongs to a place, the associated place_id</td>\n  </tr>\n  <tr>\n    <td><code>tags_array</code></td>\n    <td>Array</td>\n    <td>Array of tags assigned to the Event.</td>\n  </tr>\n  <tr>\n    <td><code>start_time</code></td>\n    <td>Time</td>\n    <td>Start time of an event</td>\n  </tr>\n  <tr>\n    <td><code>num_occurences</code></td>\n    <td>Integer</td>\n    <td>Number of time the event repeats</td>\n  </tr>\n  <tr>\n    <td><code>lnglat</code></td>\n    <td>Geo location array - [longitude, latitude]</td>\n    <td>If an event belongs to a place, you can use <code>lnglat</code> to query events by place location</td>\n  </tr>\n  <tr>\n    <td><code>created_at</code></td>\n    <td>Date</td>\n    <td>Timestamp when the event was created</td>\n  </tr>\n  <tr>\n    <td><code>updated_at</code></td>\n    <td>Date</td>\n    <td>Timestamp when the event was last updated</td>\n  </tr>\n</table>\n\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n\n\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5.\nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong>, each Event in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the current user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a list of events and checks the response.</p>\n\n<pre><code>Cloud.Events.query(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.events.length);\n        for (var i = 0; i &lt; e.events.length; i++) {\n            var event = e.events[i];\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request that queries events with name \"meetup\" near latitude 37.12, longitude -122.23 within 5 miles:</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"meetup\",\"lnglat\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/events/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryEvents\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\":\"4d870f8bd0afbe1074000017\",\n        \"name\":\"meetup\",\n        \"start_time\":\"2011-03-22T04:00:00+0000\",\n        \"created_at\":\"2011-03-21T08:42:51+0000\",\n        \"updated_at\":\"2011-03-21T08:42:51+0000\"\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSEvents query:nil withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu events\", (unsigned long)((NSArray *)e.response[@\"events\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'name':'meetup','lnglat':{'$nearSphere':[-122.23,37.12], '$maxDistance' : 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSEvents.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray events = e.getResponse().getJSONArray(\"events\");\n                    for (int i = 0; i &lt; events.length(); i++) {\n                        Log.i(\"APSEvents\", events.getJSONObject(i).getString(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        Log.i(\"APSEvents\",\"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query_occurrences' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>GET </strong><a href='#!/api/Events-method-query_occurrences' class='name expandable'>events/query/occurrences.json</a></div><div class='description'><div class='short'>Perform custom query of event occurrences with sorting and paginating. ...</div><div class='long'><p>Perform custom query of event occurrences with sorting and paginating.</p>\n\n<p>Currently, you can not query or sort data stored inside array or hash in custom\nfields.</p>\n\n<p>In addition to custom fields, you can query the following fields:</p>\n\n<table class=\"doc_content_table\">\n    <tr>\n        <th>Name</th>\n    <th>Type</th>\n        <th>Summary</th>\n    </tr>\n  <tr>\n    <td><code>name</code></td>\n    <td>String</td>\n    <td>Event's name</td>\n  </tr>\n  <tr>\n    <td><code>user_id</code></td>\n    <td>String</td>\n    <td>Event owner's user id</td>\n  </tr>\n  <tr>\n    <td><code>place_id</code></td>\n    <td>String</td>\n    <td>If an event belongs to a place, the associated place_id</td>\n  </tr>\n  <tr>\n    <td><code>start_time</code></td>\n    <td>Time</td>\n    <td>Start time of an event occurrence</td>\n  </tr>\n  <tr>\n    <td><code>end_time</code></td>\n    <td>Time</td>\n    <td>End time of an event occurrence</td>\n  </tr>\n  <tr>\n    <td><code>lnglat</code></td>\n    <td>Geo location array - [longitude, latitude]</td>\n    <td>If an event belongs to a place, you can use <code>lnglat</code> to query events by place location</td>\n  </tr>\n</table>\n\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5. \nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5. \nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>Number of records to skip. Must be used together with <code>limit</code>.\nThe specified value must not be less than 0 or an HTTP 400 error will be returned.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves a list of event occurrences and checks the response.</p>\n\n<pre><code>Cloud.Events.queryOccurrences(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.event_occurrences.length);\n        for (var i = 0; i &lt; e.event_occurrences.length; i++) {\n            var event = e.event_occurrences[i].event;\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request that queries event occurrences with name \"meetup\" near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"meetup\",\"lnglat\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/events/query/occurrences.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryEventOccurrences\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"event_occurrences\": [\n      {\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"end_time\": \"2011-03-22T21:59:50+0000\",\n        \"event\": {\n          \"id\": \"4e932f74ad44939896000054\",\n          \"name\": \"meetup\",\n          \"start_time\": \"2011-03-22T20:59:50+0000\",\n          \"duration\": 3600,\n          \"created_at\": \"2012-01-31T04:52:02+0000\",\n          \"updated_at\": \"2012-01-31T04:52:02+0000\",\n          \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=DAILY;COUNT=3\",\n          \"recurring\": \"daily\",\n          \"recurring_count\": 3,\n          \"recurring_until\": \"2011-03-26T20:59:50+0000\",\n          \"num_occurrences\": 3,\n          \"details\": \"food\",\n          \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          },\n          \"place\": {\n            \"id\":\"4d7e62d6d0afbe04170000a4\",\n            \"name\":\"Maya Restaurant\",\n            \"created_at\":\"2011-03-14T18:47:50+0000\",\n            \"updated_at\":\"2011-03-14T18:47:50+0000\",\n            \"address\":\"303 2nd Street\",\n            \"city\":\"San Francisco\",\n            \"state\":\"CA\",\n            \"country\":\"United States\",\n            \"phone\":\"(415) 543-2928\",\n            \"latitude\":37.784732,\n            \"longitude\":-122.395441\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSEvents queryOccurrences:nil withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu event_occurrences\", (unsigned long)((NSArray *)e.response[@\"event_occurrences\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\nJSONObject params = new JSONObject(\"{'name':'meetup','lnglat':{'$nearSphere':[-122.23,37.12], '$maxDistance' : 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSEvents.queryOccurrences(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                       Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-search' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>GET </strong><a href='#!/api/Events-method-search' class='name expandable'>events/search.json</a></div><div class='description'><div class='short'>Full text search of events. ...</div><div class='long'><p>Full text search of events.</p>\n\n<p>Optionally, <code>latitude</code> and <code>longitude</code> can be given to return the list of\nevents starting from a particular location (location is retrieved from place\nif the event is associated with a place). To bound the results within a\ncertain radius (in km) from the starting coordinates, add the <code>distance</code>\nparameter. <code>q</code> can be given to search by event name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>place_id</span> : String<div class='sub-desc'><p>Restrict search results to events located in the identified <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>.</p>\n</div></li><li><span class='pre'>user_id</span> : String<div class='sub-desc'><p>Restrict search results to events owned by the identified <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>.</p>\n</div></li><li><span class='pre'>latitude</span> : Number<div class='sub-desc'><p>Latitude of the search starting point.</p>\n</div></li><li><span class='pre'>longitude</span> : Number<div class='sub-desc'><p>Longitude of the search starting point.</p>\n</div></li><li><span class='pre'>distance</span> : Number<div class='sub-desc'><p>Maximum distance in km from the starting point identified by\n<code>longitude</code>, latitude`.</p>\n</div></li><li><span class='pre'>start_time</span> : Date<div class='sub-desc'><p>Only return events that start on or after <code>start_time</code>.</p>\n</div></li><li><span class='pre'>q</span> : String<div class='sub-desc'><p>Space-separated list of keywords, used to perform full text search on event\nname and tags.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>[]<div class='sub-desc'><p>List of events matching the search results.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example searches for events near a specified location.</p>\n\n<pre><code>Cloud.Events.search({\n    latitude: lat,\n    longitude: lon\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.events.length);\n        for (var i = 0; i &lt; e.events.length; i++) {\n            var event = e.events[i];\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'longitude: ' + event.longitude + '\\n' +\n                  'latitude: ' + event.latitude + '\\n' +\n                  'updated_at: ' + event.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/search.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d7e62d6d0afbe04170000a4\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchEvents\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\": \"4e932f74ad44939896000054\",\n        \"name\": \"Appcelerator Cloud Services\",\n        \"start_time\": \"2011-10-10T17:43:00+0000\",\n        \"duration\": 3000,\n        \"created_at\": \"2011-10-10T17:46:29+0000\",\n        \"updated_at\": \"2011-10-10T17:46:29+0000\",\n        \"ical\": \"DTSTART:20111010T174300Z\\nDURATION:PT50M\\nRRULE:FREQ=WEEKLY;COUNT=5\",\n        \"recurring\": \"weekly\",\n        \"recurring_count\": 5,\n        \"recurring_until\": \"2011-10-10T17:43:00+0000\",\n        \"num_occurrences\": 5,\n        \"details\": \"food\",\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"latitude\": lat,\n      @\"longitude\": lon\n};\n\n[APSEvents search:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu events\", (unsigned long)((NSArray *)e.response[@\"events\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray events = e.getResponse().getJSONArray(\"events\");\n                    final ArrayList&lt;String&gt; objectsList = new ArrayList&lt;String&gt;();\n                    for (int i = 0; i &lt; events.length(); i++) {\n                        Log.i(\"APSEvents\", events.getJSONObject(i).getString(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        Log.i(\"APSEvents\", \"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-search_occurrences' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>GET </strong><a href='#!/api/Events-method-search_occurrences' class='name expandable'>events/search/occurrences.json</a></div><div class='description'><div class='short'>Full text search of event occurrences. ...</div><div class='long'><p>Full text search of event occurrences.</p>\n\n<p>Optionally, <code>latitude</code> and <code>longitude</code> can be given to return the list of\nevent occurrences starting from a particular location (location is retrieved\nfrom place if the event is associated with a place). To bound the results\nwithin a certain radius (in km) from the starting coordinates, add the\n<code>distance</code> parameter. <code>q</code> can be given to search by event name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>place_id</span> : String<div class='sub-desc'><p>Restrict search results to events located in the identified <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>.</p>\n</div></li><li><span class='pre'>user_id</span> : String<div class='sub-desc'><p>Restrict search results to events owned by the identified <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>.</p>\n</div></li><li><span class='pre'>latitude</span> : Number<div class='sub-desc'><p>Latitude of the search starting point.</p>\n</div></li><li><span class='pre'>longitude</span> : Number<div class='sub-desc'><p>Longitude of the search starting point.</p>\n</div></li><li><span class='pre'>distance</span> : Number<div class='sub-desc'><p>Maximum distance in km from the starting point identified by\n<code>longitude</code>, latitude`.</p>\n</div></li><li><span class='pre'>start_time</span> : Date<div class='sub-desc'><p>Only return events that start on or after <code>start_time</code>.</p>\n</div></li><li><span class='pre'>end_time</span> : Date<div class='sub-desc'><p>Only return events that end on or before <code>end_time</code>.</p>\n</div></li><li><span class='pre'>q</span> : String<div class='sub-desc'><p>Space-separated list of keywords, used to perform full text search on event\nname and tags.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>[]<div class='sub-desc'><p>List of events matching the search results.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves a list of event occurrences and checks the response.</p>\n\n<pre><code>Cloud.Events.searchOccurrences({\n    place_id: savedPlaceId,\n    start_time: startTime\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.event_occurrences.length);\n        for (var i = 0; i &lt; e.event_occurrences.length; i++) {\n            var event = e.event_occurrences[i].event;\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"http://api.cloud.appcelerator.com/v1/events/search/occurrences.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d7e62d6d0afbe04170000a4\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchEventOccurrences\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"event_occurrences\": [\n      {\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"end_time\": \"2011-03-22T21:59:50+0000\",\n        \"event\": {\n          \"id\": \"4f308b26c3666e22a0000019\",\n          \"name\": \"test event 7\",\n          \"start_time\": \"2011-03-22T20:59:50+0000\",\n          \"duration\": 3600,\n          \"created_at\": \"2012-02-07T02:23:34+0000\",\n          \"updated_at\": \"2012-02-07T02:23:34+0000\",\n          \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=DAILY;COUNT=3\",\n          \"recurring\": \"daily\",\n          \"recurring_count\": 3,\n          \"recurring_until\": \"2011-03-26T20:59:50+0000\",\n          \"num_occurrences\": 3,\n          \"details\": \"test details\",\n          \"user\": {\n            \"id\": \"4f308b24c3666e22a0000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2012-02-07T02:23:32+0000\",\n            \"updated_at\": \"2012-02-07T02:23:34+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          \"place\": {\n            \"id\": \"4f308b26c3666e22a0000017\",\n            \"name\": \"test place\",\n            \"created_at\": \"2012-02-07T02:23:34+0000\",\n            \"updated_at\": \"2012-02-07T02:23:34+0000\",\n            \"address\": \"test address\",\n            \"city\": \"test city\",\n            \"latitude\": 37.784732,\n            \"longitude\": -122.393159\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"place_id\": savedPlaceId,\n      @\"start_time\": @\"2011-05-15T04:16:05+0000\"\n};\n\n[APSEvents searchOccurrences:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu event_occurrences\", (unsigned long)((NSArray *)e.response[@\"event_occurrences\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.searchOccurrences(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>GET </strong><a href='#!/api/Events-method-show' class='name expandable'>events/show.json</a></div><div class='description'><div class='short'>Show event(s) with the given IDs. ...</div><div class='long'><p>Show event(s) with the given IDs.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event_id</span> : String<div class='sub-desc'><p>ID of the event to delete.</p>\n\n<p>Either <code>event_id</code> or <code>event_ids</code> must be specified.</p>\n</div></li><li><span class='pre'>event_ids</span> : String<div class='sub-desc'><p>Comma-separated list of event IDs to show.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the identified objects, but also some important data related\nto the returning objects such as object's owner or referenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong> the Event object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>[]<div class='sub-desc'><p>List of events.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves information about a event and checks the response.</p>\n\n<pre><code>Cloud.Events.show({\n    event_id: savedEventId\n}, function (e) {\n    if (e.success) {\n        var event = e.events[0];\n        alert('Success:\\n' +\n            'id: ' + event.id + '\\n' +\n            'name: ' + event.name + '\\n' +\n            'updated_at: ' + event.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;event_id=4d870f8bd0afbe1074000017\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showEvents\"\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\": \"4e932f74ad44939896000054\",\n        \"name\": \"Appcelerator Cloud Services\",\n        \"start_time\": \"2011-10-10T17:43:00+0000\",\n        \"duration\": 3000,\n        \"created_at\": \"2011-10-10T17:46:29+0000\",\n        \"updated_at\": \"2011-10-10T17:46:29+0000\",\n        \"ical\": \"DTSTART:20111010T174300Z\\nDURATION:PT50M\\nRRULE:FREQ=WEEKLY;COUNT=5\",\n        \"recurring\": \"weekly\",\n        \"recurring_count\": 5,\n        \"recurring_until\": \"2011-10-10T17:43:00+0000\",\n        \"num_occurrences\": 5,\n        \"details\": \"food\",\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"place_id\": savedPlaceId\n};\n\n[APSEvents show:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu events\", (unsigned long)((NSArray *)e.response[@\"events\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d870f8bd0afbe1074000017\");\n\ntry {\n    APSEvents.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show_occurrences' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>GET </strong><a href='#!/api/Events-method-show_occurrences' class='name expandable'>events/show/occurrences.json</a></div><div class='description'><div class='short'>Show the event occurrences of an event with the given event_id. ...</div><div class='long'><p>Show the event occurrences of an event with the given <code>event_id</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the event to show occurrences of.</p>\n</div></li><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>event_occurences</span> : Hash[]<div class='sub-desc'><p>An array of event occurrence objects, where each occurrence is represented by\nthree properties:</p>\n\n<ul>\n<li><code>start_time</code>: <code>Date</code>. Start time for the occurrence.</li>\n<li><code>end_time</code>: <code>Date</code>. End time for the occurrence.</li>\n<li><code>event</code>: <code>Events</code>. The event object associated with this occurrence.</li>\n</ul>\n\n\n<p>Since the event information will be the same for each occurrence, you can omit\nthis information by setting <code>response_json_depth</code> to 1.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves information about an event's occurrences and checks the response.</p>\n\n<pre><code>Cloud.Events.showOccurrences({\n    event_id: savedEventId\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.event_occurrences.length);\n        for (var i = 0; i &lt; e.event_occurrences.length; i++) {\n            var event = e.event_occurrences[i].event;\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/show/occurrences.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;event_id=4d870f8bd0afbe1074000017\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showEventOccurrences\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 1\n  },\n  \"response\": {\n    \"event_occurrences\": [\n      {\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"end_time\": \"2011-03-22T21:59:50+0000\",\n        \"event\": {\n          \"id\": \"4e932f74ad44939896000054\",\n          \"name\": \"Appcelerator Cloud Services\",\n          \"start_time\": \"2011-03-22T20:59:50+0000\",\n          \"duration\": 3600,\n          \"created_at\": \"2012-01-31T04:52:02+0000\",\n          \"updated_at\": \"2012-01-31T04:52:02+0000\",\n          \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=DAILY;COUNT=3\",\n          \"recurring\": \"daily\",\n          \"recurring_count\": 3,\n          \"recurring_until\": \"2011-03-26T20:59:50+0000\",\n          \"num_occurrences\": 3,\n          \"details\": \"food\",\n          \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          },\n          \"place\": {\n            \"id\":\"4d7e62d6d0afbe04170000a4\",\n            \"name\":\"Maya Restaurant\",\n            \"created_at\":\"2011-03-14T18:47:50+0000\",\n            \"updated_at\":\"2011-03-14T18:47:50+0000\",\n            \"address\":\"303 2nd Street\",\n            \"city\":\"San Francisco\",\n            \"state\":\"CA\",\n            \"country\":\"United States\",\n            \"phone\":\"(415) 543-2928\",\n            \"latitude\":37.784732,\n            \"longitude\":-122.395441\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"place_id\": savedPlaceId\n};\n\n[APSEvents showOccurrences:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu event_occurrences\", (unsigned long)((NSArray *)e.response[@\"event_occurrences\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d870f8bd0afbe1074000017\");\n\ntry {\n    APSEvents.showOccurrences(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Events'>Events</span></div><strong class='http-method'>PUT </strong><a href='#!/api/Events-method-update' class='name expandable'>events/update.json</a></div><div class='description'><div class='short'>Update the event with the given id. ...</div><div class='long'><p>Update the event with the given <code>id</code>. Only the original submitter can update\nthe event.</p>\n\n<p>For the event that is set as a recurring event, once created, there will be\nseveral \"event occurrences\" created associating with the event object on\nserver side, one \"event occurrence\" represents a single occurrence of the\nrecurring event. An \"event occurrence\" contains start and end time of the\nevent's occurrence which are calulated according to the \"recurring\" settings\nof the event object.</p>\n\n<p>Instead of computing actual individual occurrences of a recurring event on the\nclient side, you can use event occurrences query API to get a list of\noccurrences associated with a repeating event.</p>\n\n<p>To get all \"event occurrence\" of an recurring event object, you can use\n<a href=\"#!/api/Events-method-show_occurrences\" rel=\"Events-method-show_occurrences\" class=\"docClass\">show_occurrences</a> with the event's <code>id</code>.</p>\n\n<p>All the event occurrences will be recomputed if there is any change to the\nstart_time, duration and/or recurring.</p>\n\n<p>An application admin can update any Event object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the event to update.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Updated event name.</p>\n</div></li><li><span class='pre'>start_time</span> : Date<div class='sub-desc'><p>Updated event start time.</p>\n</div></li><li><span class='pre'>duration</span> : Number<div class='sub-desc'><p>Updated event duration, in seconds.</p>\n</div></li><li><span class='pre'>recurring</span> : String<div class='sub-desc'><p>New recurrance schedule. Can take the following values: \"daily\", \"weekly\", \"monthly\", or \"yearly\".</p>\n</div></li><li><span class='pre'>recurring_count</span> : Number<div class='sub-desc'><p>Updated number of occurrences for the event.</p>\n</div></li><li><span class='pre'>recurring_until</span> : Date<div class='sub-desc'><p>Updated date of last recurrance.</p>\n</div></li><li><span class='pre'>details</span> : String<div class='sub-desc'><p>Updated description of the event.</p>\n</div></li><li><span class='pre'>place_id</span> : String<div class='sub-desc'><p>ID of the place where this event takes place.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to assign as the event's primary photo.</p>\n\n<p>When you use <code>photo</code> parameter to attach a new photo, you can use it with\n<a href=\"/docs/photosizes\">custom resize and sync options</a></p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to use as the event's primary photo.</p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma-separated list of tags associated with this event.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User to update the Event object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to update the Event object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>[]<div class='sub-desc'><p>Single-element array containing the updated event object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example updates a event and checks the response.</p>\n\n<pre><code>Cloud.Events.update({\n    event_id: savedEventId,\n    name: 'Annual Celebration',\n    start_time: starttime,\n    duration: 3600,\n    recurring: 'monthly',\n    recurring_count: 5\n}, function (e) {\n    if (e.success) {\n        var event = e.events[0];\n        alert('Success:\\n' +\n            'id: ' + event.id + '\\n' +\n            'name: ' + event.name + '\\n' +\n            'updated_at: ' + event.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"event_id=4d870f8bd0afbe1074000017\" -F \"place_id=4d858ca9d0afbe014f000008\" http://api.cloud.appcelerator.com/v1/events/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updateEvent\"\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\":\"4d870f8bd0afbe1074000017\",\n        \"name\":\"Appcelerator Cloud Services Meetup Group\",\n        \"start_time\":\"2011-03-22T04:00:00+0000\",\n        \"created_at\":\"2011-03-21T08:42:51+0000\",\n        \"updated_at\":\"2011-03-21T08:57:00+0000\"\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"end_time\":\"2011-03-22T06:00:00+0000\",\n        \"place\": {\n          \"id\":\"4d858ca9d0afbe014f000008\",\n          \"name\":\"El Farolito Taqueria\",\n          \"created_at\":\"2011-03-20T05:12:09+0000\",\n          \"updated_at\":\"2011-03-20T05:12:09+0000\",\n          \"address\":\"2779 Mission Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 826-4870\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"event_id\": savedEventId,\n      @\"name\": @\"Annual Celebration\",\n      @\"start_time\": @\"2011-05-15T04:16:05+0000\",\n      @\"duration\": @3600,\n      @\"recurring\": @\"yearly\",\n      @\"recurring_count\": @5\n};\n\n[APSEvents update:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal static Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d870f8bd0afbe1074000017\");\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});