Ext.data.JsonP['SocialIntegrations']({"tagname":"class","name":"SocialIntegrations","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"loginexternal.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml"},{"filename":"SocialIntegrations.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/SocialIntegrations/SocialIntegrations.yml"},{"filename":"facebook_friends.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml"},{"filename":"linkexternal.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml"},{"filename":"unlinkexternal.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml"}],"members":{"cfg":[],"property":[],"method":[{"name":"users/external_account_link.json","tagname":"method","owner":"SocialIntegrations","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-external_account_link"},{"name":"users/external_account_login.json","tagname":"method","owner":"SocialIntegrations","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-external_account_login"},{"name":"users/external_account_unlink.json","tagname":"method","owner":"SocialIntegrations","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-external_account_unlink"},{"name":"social/facebook/search_friends.json","tagname":"method","owner":"SocialIntegrations","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-facebook_search_friends"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The SocialIntegrations object lets users link their existing ArrowDB accounts to their social network accounts\n(Facebook or Twitter, for example) and login to ArrowDB using their social network account credentials. You\ncan also search for a user's Facebook friends who have installed the same application and linked their Facebook account to ArrowDB.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-external_account_link' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='SocialIntegrations'>SocialIntegrations</span></div><strong class='http-method'>POST </strong><a href='#!/api/SocialIntegrations-method-external_account_link' class='name expandable'>users/external_account_link.json</a></div><div class='description'><div class='short'>Associates an external account with an existing Appcelerator Cloud Services\nuser account. ...</div><div class='long'><p>Associates an external account with an existing Appcelerator Cloud Services\nuser account. Registered and logged in Appcelerator Cloud Services users can\nlink one or more external accounts to their existing account. Once linked, the\nuser can login using either Appcelerator Cloud Services account or any of the\nlinked external accounts.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>External account's user ID. Optional for Facebook; if ID is missing and <code>type</code>\nis <code>facebook</code>, Appcelerator Cloud Services uses the Facebook token to obtain\nthe user ID.</p>\n</div></li><li><span class='pre'>type</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Type of the external account, for example, \"facebook\", \"linkedin\", or\n\"twitter\".</p>\n</div></li><li><span class='pre'>token</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Token provided by the external account. Currently only Facebook tokens are\nvalidated  by the Appcelerator Cloud Services server.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>Single-element array containing the updated user record.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example links an external account and checks the response.</p>\n\n<pre><code>Cloud.SocialIntegrations.externalAccountLink({\n    type: 'facebook',\n    token: Ti.Facebook.accessToken\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"id=12345678\" -F \"type=facebook\" -F \"token=lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\" https://api.cloud.appcelerator.com/v1/users/external_account_link.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"linkExternalAccount\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n          {\n            \"external_id\": \"641643673\",\n            \"external_type\": \"facebook\",\n            \"token\": \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Appcelerator Cloud Services ios SDK comes with Facebook SDK and provides an\neasy way to do facebook link. Follow the <a href=\"https://github.com/facebook/facebook-ios-sdk\">facebook-ios-\nsdk</a> sample app instructions to\nedit your app-info.plist to add a URL type for your Facebook app id. Then add\nthe following method to your AppDelegate.m:</p>\n\n<pre><code>// pre 4.2\n- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url\n{\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n\n// 4.2+\n- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url  sourceApplication:(NSString *)sourceApplication annotation:(id)annotation {\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n</code></pre>\n\n<p>Modify the Appcelerator Cloud Services initialization call in your app\ndelegate to pass in the Facebook app id:</p>\n\n<pre><code>[ACSClient initializeWithOauthConsumerKey:oauthConsumerKey consumerSecret:oauthConsumerSecret customAppIds:[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>[ACSClient initializeWithAppKey:ACS_APP_KEY customAppIds:\n[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>To launch the Faceook Connect dialog to link with an existing user account,\nmake sure user is logged in, then call the following:</p>\n\n<pre><code>[[ACSClient defaultACSClient] facebookAuth:[NSArray arrayWithObjects:@\"publish_stream\", @\"email\", @\"offline_access\", nil] delegate:self];\n</code></pre>\n\n<p>If a user is already logged in to your app, it will link the user account with\nthe Facebook account that was just authorized. If no user is logged in to your\napp, it will perform a login to Appcelerator Cloud Services using the facebook\naccount information.</p>\n\n<p>Optionaly, if you would like to receive callbacks when Facebook link or login\nactions are taken, add <code>&lt;CCFBSessionDelegate&gt;</code> to you controller's delegate\nlist. Then implement the following methods:</p>\n\n<pre><code>-(void)fbDidLogin;\n-(void)fbDidNotLogin:(BOOL)cancelled error:(NSError *)error;\n</code></pre>\n\n<p>For other types of external accounts, you will have to use their SDKs to get\nthe uid and token first, then make the link call with the Appcelerator Cloud\nServices.</p>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"type\": @\"facebook\",\n    @\"token\": accessToken\n};\n\n[APSSocialIntegrations externalAccountLink:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Linked %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"109216395704353\");\ndata.put(\"type\", \"facebook\");\ndata.put(\"token\", \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\");\n\ntry {\n    APSSocialIntegrations.externalAccountLink(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSSocialIntegrations\", \"Success!\");\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-external_account_login' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='SocialIntegrations'>SocialIntegrations</span></div><strong class='http-method'>POST </strong><a href='#!/api/SocialIntegrations-method-external_account_login' class='name expandable'>users/external_account_login.json</a></div><div class='description'><div class='short'>Users can login using an external account such as Facebook, Twitter,\nLinkedin, etc without creating an account with A...</div><div class='long'><p>Users can login using an external account such as Facebook, Twitter,\nLinkedin, etc without creating an account with Appcelerator Cloud Services\nahead of time. The external account login creates a Appcelerator Cloud\nServices account if it hasn't been created, otherwise, it will login using the\nuser who has the matching external account info.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>External account's user ID. Optional for Facebook; if ID is missing and <code>type</code>\nis <code>facebook</code>, Appcelerator Cloud Services uses the Facebook token to obtain\nthe user ID.</p>\n</div></li><li><span class='pre'>type</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Type of the external account, for example, \"facebook\", \"linkedin\", or\n\"twitter\".</p>\n</div></li><li><span class='pre'>token</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Token provided by the external account. Currently only Facebook tokens are\nvalidated  by the Appcelerator Cloud Services server.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>Single-element array containing the updated user record.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example logs a user in using an external account and checks the response.</p>\n\n<pre><code>Cloud.SocialIntegrations.externalAccountLogin({\n    type: 'facebook',\n    token: Ti.Facebook.accessToken\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"id=109216395704353\" -F type=\"facebook\" -F \"token=lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\" https://api.cloud.appcelerator.com/v1/users/external_account_login.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"externalAccountLogin\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n          {\n            \"external_id\": \"641643673\",\n            \"external_type\": \"facebook\",\n            \"token\": \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Appcelerator Cloud Services ios SDK comes with Facebook SDK and provides an\neasy way to do facebook login. Follow the <a href=\"https://github.com/facebook/facebook-ios-sdk\">facebook-ios-\nsdk</a> sample app instructions to\nedit your app-info.plist to add a URL type for your Facebook app id. Then add\nthe following method to your AppDelegate.m:</p>\n\n<pre><code>// pre 4.2\n- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url\n{\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n\n// 4.2+\n- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url  sourceApplication:(NSString *)sourceApplication annotation:(id)annotation {\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n</code></pre>\n\n<p>Modify the Appcelerator Cloud Services initialization call in your app\ndelegate to pass in the Facebook app id:</p>\n\n<pre><code>[ACSClient initializeWithOauthConsumerKey:oauthConsumerKey consumerSecret:oauthConsumerSecret customAppIds:[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>[ACSClient initializeWithAppKey:ACS_APP_KEY customAppIds:\n[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>To perform a login using facebook connect, make sure user is not logged in to\nAppcelerator Cloud Services, then call the following:</p>\n\n<pre><code>[[ACSClient defaultACSClient] facebookAuth:[NSArray arrayWithObjects:@\"publish_stream\", @\"email\", @\"offline_access\", nil] delegate:self];\n</code></pre>\n\n<p>If a user is already logged in to your app, it will link the user account with\nthe Facebook account that was just authorized. If no user is logged in to your\napp, it will perform a login to Appcelerator Cloud Services using the facebook\naccount information.</p>\n\n<p>Optionaly, if you would like to receive callbacks when Facebook link or login\nactions are taken, add <code>&lt;CCFBSessionDelegate&gt;</code> to you controller's delegate\nlist. Then implement the following methods:</p>\n\n<pre><code>-(void)fbDidLogin;\n-(void)fbDidNotLogin:(BOOL)cancelled error:(NSError *)error;\n</code></pre>\n\n<p>For other types of external accounts, you will have to use their SDKs to get\nthe uid and token first, then make the link call with the Appcelerator Cloud\nServices.</p>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"type\": @\"facebook\",\n    @\"token\": accessToken\n};\n\n[APSSocialIntegrations externalAccountLogin:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Loggedin %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"109216395704353\");\ndata.put(\"type\", \"facebook\");\ndata.put(\"token\", \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\");\n\ntry {\n    APSSocialIntegrations.externalAccountLogin(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    String userId = e.getResponse().getJSONArray(\"users\").getJSONObject(0).getString(\"id\");\n                    new AlertDialog.Builder(currentActivity)\n                    .setTitle(\"Success!\").setMessage(\"Logged in! You are now logged in as \" + userId)\n                    .setPositiveButton(android.R.string.ok, null)\n                    .setIcon(android.R.drawable.ic_dialog_info)\n                    .show();\n                } catch (JSONException err) {\n                    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-external_account_unlink' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='SocialIntegrations'>SocialIntegrations</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/SocialIntegrations-method-external_account_unlink' class='name expandable'>users/external_account_unlink.json</a></div><div class='description'><div class='short'>Disassociate an external account from a Appcelerator Cloud Services user\naccount. ...</div><div class='long'><p>Disassociate an external account from a Appcelerator Cloud Services user\naccount.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>External account's user ID.</p>\n</div></li><li><span class='pre'>type</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Type of the external account, for example, \"facebook\", \"linkedin\", or\n\"twitter\".</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>Single-element array containing the updated user record.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example unlinks an external Facebook account.</p>\n\n<pre><code>Cloud.SocialIntegrations.externalAccountUnlink({\n    type: 'facebook',\n    id: facebookUserId\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/users/external_account_unlink.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;id=1234567&amp;type=facebook\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"unlinkExternalAccount\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n        ]\n      }\n    ]\n  }\n}\n\nFor Facebook:\n\nNSError *error;\n[[ACSClient defaultACSClient] unlinkFromFacebook:&amp;error;];\n</code></pre>\n\n<p>This is a synchronous call and doesn't have a callback method.</p>\n\n<p>For other types of external account, you need to perform the\nexternal_account_unlink call.</p>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"type\": @\"facebook\",\n    @\"id\": facebookUserId\n};\n\n[APSSocialIntegrations externalAccountUnlink:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Unlinked %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"109216395704353\");\ndata.put(\"type\", \"facebook\");\n\ntry {\n    APSSocialIntegrations.externalAccountUnlink(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSSocialIntegrations\", \"Success!\");\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-facebook_search_friends' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='SocialIntegrations'>SocialIntegrations</span></div><strong class='http-method'>GET </strong><a href='#!/api/SocialIntegrations-method-facebook_search_friends' class='name expandable'>social/facebook/search_friends.json</a></div><div class='description'><div class='short'>Find the current user's Facebook Friends who also registered in the same App. ...</div><div class='long'><p>Find the current user's Facebook Friends who also registered in the same App.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>List of friends.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves a list of Facebook friends and checks the response.</p>\n\n<pre><code>Cloud.SocialIntegrations.searchFacebookFriends(function (e){\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/social/facebook/search_friends.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchFacebookFriends\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n          {\n            \"external_id\": \"641643673\",\n            \"external_type\": \"facebook\",\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSSocialIntegrations searchFacebookFriends:nil withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSSocialIntegrations.searchFacebookFriends(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    if (users.length() &lt;= 0) {\n                        Log.i(\"APSSocialIntegrations\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject user = users.getJSONObject(i);\n                            Log.i(\"APSSocialIntegrations\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});