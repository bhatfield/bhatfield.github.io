Ext.data.JsonP['admin_access']({"guide":"<h1 id='admin_access-section-admin-access'>Admin Access</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/admin_access-section-create-an-admin-user'>Create an Admin User</a><ul><ul><li><a href='#!/guide/admin_access-section-create-a-new-admin-user'>Create a New Admin User</a><li><a href='#!/guide/admin_access-section-add-admin-access-to-an-existing-user'>Add Admin Access to an Existing User</a></ul></ul><li><a href='#!/guide/admin_access-section-perform-arrowdb-api-calls-on-behalf-of-another-user'>Perform ArrowDB API Calls on Behalf of Another User</a><li><a href='#!/guide/admin_access-section-batch-delete'>Batch Delete</a><li><a href='#!/guide/admin_access-section-admin-drop-custom-collection'>Admin Drop Custom Collection</a></ul>\n</div>\n\n<p>ArrowDB admin access allows application admin users to execute some batch\noperations and make ArrowDB API calls on behalf of another user.</p>\n\n<h2 id='admin_access-section-create-an-admin-user'>Create an Admin User</h2>\n\n<p>Before creating an admin user, log in to the Appcelerator Dashboard and select your application.</p>\n\n<ol>\n<li>Log in to <a href=\"https://platform.appcelerator.com\">https://platform.appcelerator.com</a>.</li>\n<li>Select an application from the <strong>Apps</strong> drop-down list.</li>\n</ol>\n\n\n<p>Then, either create a new admin user or add admin access to an existing user.</p>\n\n<h4 id='admin_access-section-create-a-new-admin-user'>Create a New Admin User</h4>\n\n<ol>\n<li>In the left navigation bar, click <strong>Manage Data</strong>.</li>\n<li>In the main pane, click <strong>Users</strong>.</li>\n<li>Click <strong>+ New User</strong>. A dialog appears.</li>\n<li>Under the <strong>Admin</strong> section, click the <strong>Yes</strong> radio button.</li>\n<li>At mininum, enter a username, password and confirm password.</li>\n<li>Click <strong>Save</strong>.</li>\n</ol>\n\n\n<p><p><img src=\"guides/admin_access/admin_appc1.png\" alt=\"\" width=\"559\" height=\"532\"></p></p>\n\n<p>ArrowDB creates a new user with admin access.</p>\n\n<h4 id='admin_access-section-add-admin-access-to-an-existing-user'>Add Admin Access to an Existing User</h4>\n\n<ol>\n<li>In the left navigation bar, click <strong>Manage Data</strong>.</li>\n<li>In the main pane, click <strong>Users</strong>.</li>\n<li>Locate the user you want to give admin access to and click the pencil icon in the same row to\n edit the user.</li>\n<li>Locate the <strong>Admin</strong> section and click the <strong>Yes</strong> radio button.</li>\n<li>Scroll down and click <strong>Save Changes</strong>.</li>\n</ol>\n\n\n<p>This user now has admin access.  To disable access, follow the same steps except click the <strong>No</strong>\nradio button.</p>\n\n<h2 id='admin_access-section-perform-arrowdb-api-calls-on-behalf-of-another-user'>Perform ArrowDB API Calls on Behalf of Another User</h2>\n\n<p>An admin user can perform ArrowDB API calls on behalf of another user.  For example, when you\nspecify the <code>su_id</code> parameter to an ID of another user as part of the create method,\nthe admin user creates an object on behalf of that user. The <code>user</code> parameter for the object\nwill be reported as the other user not the admin user.</p>\n\n<p>This admin operation is supported by any create, update and delete method, as well as the following methods:</p>\n\n<ul>\n<li><a href=\"#!/api/KeyValues-method-append\" rel=\"KeyValues-method-append\" class=\"docClass\">KeyValues.append</a></li>\n<li><a href=\"#!/api/KeyValues-method-incrby\" rel=\"KeyValues-method-incrby\" class=\"docClass\">KeyValues.incrby</a></li>\n<li><a href=\"#!/api/KeyValues-method-set\" rel=\"KeyValues-method-set\" class=\"docClass\">KeyValues.set</a></li>\n<li><a href=\"#!/api/PushNotifications-method-subscribe\" rel=\"PushNotifications-method-subscribe\" class=\"docClass\">PushNotifications.subscribe</a></li>\n</ul>\n\n\n<p>For example, the following curl command creates a new status for the specified user:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -F \"su_id=520289441e1ef70b1a0236d2\" -F \"message=Hola, Mundo\\!\" \"https://api.cloud.appcelerator.com/v1/statuses/create.json?key=APP_API_KEY\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createStatus\"\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\": \"5202c1ed87173a0afc024524\",\n        \"message\": \"Hola, Mundo\\\\!\",\n        \"created_at\": \"2013-08-07T21:53:49+0000\",\n        \"updated_at\": \"2013-08-07T21:53:49+0000\",\n        \"user\": {\n          \"id\": \"520289441e1ef70b1a0236d2\",\n          \"created_at\": \"2013-08-07T17:52:04+0000\",\n          \"updated_at\": \"2013-08-07T17:52:04+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2013-08-07T17:52:04+0000\",\n          \"username\": \"not_an_admin\",\n          \"admin\": \"false\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>To verify that the other user created this status and not the admin user, run the following curl\ncommand and compare the user IDs:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/statuses/show.json?key=APP_API_KEY&amp;status_id=5202c1ed87173a0afc024524\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showStatus\"\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\": \"5202c1ed87173a0afc024524\",\n        \"message\": \"Hola, Mundo\\\\!\",\n        \"created_at\": \"2013-08-07T21:53:49+0000\",\n        \"updated_at\": \"2013-08-07T21:53:49+0000\",\n        \"user\": {\n          \"id\": \"520289441e1ef70b1a0236d2\",\n          \"created_at\": \"2013-08-07T17:52:04+0000\",\n          \"updated_at\": \"2013-08-07T17:52:04+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2013-08-07T17:52:04+0000\",\n          \"username\": \"not_an_admin\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h2 id='admin_access-section-batch-delete'>Batch Delete</h2>\n\n<p>ArrowDB provides an API end point named <code>batch_delete</code> that allows application\nadmins to delete multiple ArrowDB objects in one operation. The method takes a\n<code>where</code> parameter that constrains the selection of objects to delete. If <code>where</code>\nis omitted, all objects are deleted. For performance reasons, the number of\nobjects that can be deleted in a single batch delete operation is limited to\n100,000. Objects are deleted asynchronously in a separate process, not immediately\nupon method invocation.</p>\n\n<p>Certain ArrowDB objects can have dependencies on other objects. For example, when\nyou create a <code><a href=\"#!/api/Checkins-method-create\" rel=\"Checkins-method-create\" class=\"docClass\">Checkins</a></code> object you can specify a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> or <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object to associate with it. In this case, the\nCheckins object is a dependency of the Places or Events object. If you delete\nthe Places or Events object, the dependent Checkins object is <strong>not</strong> deleted.</p>\n\n<p>For example, the following deletes all Users objects whose <code>favorite_color</code> custom field is\n'blue'.</p>\n\n<pre><code> $curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/users/batch_delete.json?key&lt;API_KEY&gt;&amp;pretty_json=true     \n {\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"adminBatchDelete\"\n  }\n}     \n</code></pre>\n\n<p>Note that the method returns an HTTP 200 code (success) even if the query matched no objects.</p>\n\n<p>The following ArrowDB objects support batch delete operations:</p>\n\n<ul>\n<li><a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a></li>\n<li><a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a></li>\n<li><a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a></li>\n<li><a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a></li>\n<li><a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></li>\n<li><a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a></li>\n<li><a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a></li>\n<li><a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a></li>\n<li><a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></li>\n</ul>\n\n\n<h2 id='admin_access-section-admin-drop-custom-collection'>Admin Drop Custom Collection</h2>\n\n<p>An application admin user can also drop a Custom Object collection using\n<code>admin_drop_collection</code> method. When calling the <code>admin_drop_collection</code> method,\nthe admin user must specify a class name to indicate which custom collection to drop.</p>\n\n<p>For example, the following drops the <code>car</code> collection:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/objects/car/admin_drop_collection.json?key=hPkMYgNozXR8xegNvWjqBVTcWK8P5fIX\"\n{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"dropCollection\"\n  }\n}\n</code></pre>\n\n<p>Only Custom Objects support the drop custom collection method.</p>\n","title":"Admin Access"});