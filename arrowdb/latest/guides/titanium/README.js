Ext.data.JsonP['titanium']({"guide":"<h1 id='titanium-section-titanium-sdk-and-arrowdb'>Titanium SDK and ArrowDB</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/titanium-section-adding-arrowdb-to-your-titanium-project'>Adding ArrowDB to your Titanium Project</a><ul><li><a href='#!/guide/titanium-section-adding-arrowdb-to-a-new-titanium-application'>Adding ArrowDB to a New Titanium Application</a><li><a href='#!/guide/titanium-section-adding-arrowdb-to-an-existing-titanium-application'>Adding ArrowDB to an Existing Titanium Application</a><li><a href='#!/guide/titanium-section-adding-an-existing-arrowdb-application-to-a-titanium-project'>Adding an Existing ArrowDB Application to a Titanium Project</a><li><a href='#!/guide/titanium-section-virtual-private-cloud-configuration'>Virtual Private Cloud Configuration</a></ul><li><a href='#!/guide/titanium-section-importing-the-module'>Importing the Module</a><li><a href='#!/guide/titanium-section-authenticating-your-application'>Authenticating your Application</a><li><a href='#!/guide/titanium-section-push-notifications'>Push Notifications</a><li><a href='#!/guide/titanium-section-using-the-arrowdb-apis'>Using the ArrowDB APIs</a><li><a href='#!/guide/titanium-section-examples'>Examples</a><li><a href='#!/guide/titanium-section-importing-and-running-the-ti-cloud-sample-application'>Importing and running the Ti.Cloud Sample application</a><li><a href='#!/guide/titanium-section-references'>References</a></ul>\n</div>\n\n<p>The ArrowDB APIs are supported in Titanium using the <code>ti.cloud</code>\nmodule, an optional module which is packaged with the Titanium SDK.</p>\n\n<p>When new APIs are added to ArrowDB, they may not be immediately\navailable in the Cloud module. See the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.Cloud\">module API reference</a>\nfor a list of supported objects and methods.</p>\n\n<h2 id='titanium-section-adding-arrowdb-to-your-titanium-project'>Adding ArrowDB to your Titanium Project</h2>\n\n<p>This section describes how to add ArrowDB to a Titanium application. If you don't have an\nexisting ArrowDB datasource, Studio can create one for you.</p>\n\n<p>If you are using the CLI, the CLI automatically creates an ArrowDB datasource for you.</p>\n\n<h3 id='titanium-section-adding-arrowdb-to-a-new-titanium-application'>Adding ArrowDB to a New Titanium Application</h3>\n\n<p>If you are using Studio to create a new Titanium application, you can create a new ArrowDB\ndatasource at the same time:</p>\n\n<ol>\n<li>Click <strong>File</strong> > <strong>New</strong> > <strong>Mobile Project</strong> to start the new project wizard.</li>\n<li>Choose a template and click <strong>Next</strong>.</li>\n<li>On the next screen, make sure <strong>Enable Appcelerator Platform Services</strong> checked.</li>\n<li>Enter the project name and ID and click <strong>Finish</strong>.</li>\n</ol>\n\n\n<p><p><img src=\"guides/titanium/studio-enable-new.png\" alt=\"\" width=\"553\" height=\"132\"></p></p>\n\n<p>This creates a new Titanium application and a new ArrowDB datasource, and configures the\nTitanium project to access ArrowDB.</p>\n\n<h3 id='titanium-section-adding-arrowdb-to-an-existing-titanium-application'>Adding ArrowDB to an Existing Titanium Application</h3>\n\n<p>If you have an existing Titanium project in Studio, and want to create a new ArrowDB\ndatasource for it:</p>\n\n<ol>\n<li>Open the project's <code>tiapp.xml</code> and switch to the <strong>Overview</strong> tab.</li>\n<li>Click to <strong>Enable Services</strong>.</li>\n</ol>\n\n\n<p><p><img src=\"guides/titanium/studio-enable-existing.png\" alt=\"\" width=\"445\" height=\"104\"></p></p>\n\n<h3 id='titanium-section-adding-an-existing-arrowdb-application-to-a-titanium-project'>Adding an Existing ArrowDB Application to a Titanium Project</h3>\n\n<p>If you have already created an ArrowDB datasource, you can add it to a Titanium project by\nediting the <code>tiapp.xml</code> file. You'll need the application key generated when you created the ArrowDB datasource.</p>\n\n<ol>\n<li><p>Open the project's <code>tiapp.xml</code> and switch to the <strong>tiapp.xml</strong> (source view) tab.</p></li>\n<li><p>Add the following entries to the file:</p>\n\n<pre><code>&lt;property name=\"acs-api-key-development\" type=\"string\"&gt;YOUR DEVELOPMENT APP KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key-production\" type=\"string\"&gt;YOUR PRODUCTION APP KEY HERE&lt;/property&gt;\n</code></pre></li>\n<li><p>Find the <code>&lt;modules&gt;</code> element in the file, and add the following:</p>\n\n<pre><code>&lt;module platform=\"commonjs\"&gt;ti.cloud&lt;/module&gt;\n</code></pre>\n\n<p>If there is no <code>&lt;modules&gt;</code> element, add the following inside the <code>&lt;ti:app&gt;</code>\nelement:</p>\n\n<pre><code>&lt;modules&gt;\n    &lt;module platform=\"commonjs\"&gt;ti.cloud&lt;/module&gt;\n&lt;/modules&gt;\n</code></pre>\n\n<p>(This element is usually placed just above the <code>&lt;deployment-targets&gt;</code> element.)</p></li>\n</ol>\n\n\n<h3 id='titanium-section-virtual-private-cloud-configuration'>Virtual Private Cloud Configuration</h3>\n\n<p>If you are using a virtual private cloud (VPC), you need to configure your Arrow Push dispatcher\nURL in order to send push notifications with GCM.  In the <code>tiapp.xml</code> file, add the <code>acs-push-api-url</code>\napplication property and set the node text to the push dispatcher URL provided to you.  The URL may\nbe the same as your custom ArrowDB endpoint and have deployment-specific settings, that is, two\nURLs--one for production and another for the development environment.</p>\n\n<pre><code>&lt;ti:app&gt;\n    &lt;property name=\"acs-push-api-url-production\"&gt;YOUR PRODUCTION PUSH DISPATCHER URL HERE&lt;/property&gt;\n    &lt;property name=\"acs-push-api-url-development\"&gt;YOUR DEVELOPMENT PUSH DISPATCHER URL HERE&lt;/property&gt;\n&lt;/ti:app&gt;\n</code></pre>\n\n<h2 id='titanium-section-importing-the-module'>Importing the Module</h2>\n\n<p>ArrowDB support is baked into Titanium. However, you must include the cloud\nservices module into your project to use ArrowDB functionality. In your <code>app.js</code> (or\nother suitable file), include the <code>require()</code> statement as shown here:</p>\n\n<pre><code>var Cloud = require('ti.cloud');\nCloud.debug = true;  // optional; if you add this line, set it to false for production\n</code></pre>\n\n<h2 id='titanium-section-authenticating-your-application'>Authenticating your Application</h2>\n\n<p>To keep your ArrowDB data secure from unauthorized access, your application must prove that\nit is allowed to communicate with ArrowDB in each HTTP request. The Titanium Cloud module passes\nthe ArrowDB application key, configured in the project's <code>tiapp.xml</code> file, with each request over SSL.</p>\n\n<p>For more information, see <a href=\"#!/guide/acs/authentication\">Authentication</a>.</p>\n\n<h2 id='titanium-section-push-notifications'>Push Notifications</h2>\n\n<p>To setup your Titanium application to use push notifications, see\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Push_Notifications\">Push Notification guide</a>.</p>\n\n<h2 id='titanium-section-using-the-arrowdb-apis'>Using the ArrowDB APIs</h2>\n\n<p>The <code>ti.cloud</code> module APIs follow the same basic pattern. For each ArrowDB method supported by\nthe API, the module supplies a JavaScript method that takes two arguments: a <em>parameters</em>\ndictionary, which holds the parameters passed to the method, and a callback to be invoked\nwhen the method completes.</p>\n\n<p>The response callback receives a single object, which is a slightly modified version of\nthe REST response object. The REST response contains two objects:</p>\n\n<ul>\n<li><code>meta : Object</code>. Response metadata, such as success or failure, error messages, pagination\ninformation.</li>\n<li><code>response : Object</code>. Response data specific to the call. For example, if you search for places,\nthe response object contains an array of places.</li>\n</ul>\n\n\n<p>The module's response object includes any properties from <code>response</code> at the top level of the\nobject. For example, if the REST response includes <code>response.places</code>, this is included as\n<code>places</code>.</p>\n\n<p>The module's response object also includes the following fields:</p>\n\n<ul>\n<li><code>meta : Object</code>. Metadata from the REST response.</li>\n<li><code>success : Boolean</code>. True if the request succeeded (that is, <code>meta.status == \"ok\"</code>).</li>\n<li><code>error : Boolean</code>. True if the request failed (<code>meta.status != \"ok\"</code>).</li>\n<li><code>message : String</code>. Error message, if available.</li>\n<li><code>code : Number</code>. Error code, if available.</li>\n</ul>\n\n\n<h2 id='titanium-section-examples'>Examples</h2>\n\n<p>With over 25 APIs available for you to use, we obviously can't\ncover them all here. But let's take a look at a couple of examples.</p>\n\n<p>Create a user</p>\n\n<pre><code>// example assumes you have a set of text fields named username, password, etc.\nCloud.Users.create({\n    username: username.value,\n    password: password.value,\n    password_confirmation: confirmPassword.value,\n    first_name: firstName.value,\n    last_name: lastName.value\n}, function (e) {\n    if (e.success) {\n        // user created successfully\n    } else {\n        // oops, something went wrong\n    }\n});\n</code></pre>\n\n<p>Post a photo to a photo collection. To post a photo to a collection, you need to create the collection first using\n<a href=\"#!/api/PhotoCollections-method-create\" rel=\"PhotoCollections-method-create\" class=\"docClass\">PhotoCollections.create</a>.</p>\n\n<pre><code>// assumes you've obtained a photo from the camera or gallery, with blob data stored in an object named photo,\n// and that collectionID contains the ID of an existing photo collection.\nCloud.Photos.create({\n    photo: photo,\n    collection_id: collectionID,\n    'photo_sync_sizes[]': 'small_240'\n}, function (e) {\n    if (e.success) {\n        // null out our photo objects to clean up memory\n        photo = null;\n        collectionID = null;\n    } else {\n        // oops, something went wrong\n    }\n});\n</code></pre>\n\n<p>Linking a Facebook login with your app. You must already be logged in using the\nTitanium <a href=\"http://docs.appcelerator.com//platform/latest/#!/api/Modules.Facebook\">Facebook module</a> before\ncalling the <code>externalAccountLogin</code> method.</p>\n\n<pre><code>// Not shown is the code to implement the Facebook module in your app\nvar Facebook = require('facebook');\n\n// call the ArrowDB Facebook SocialIntegrations API to link logged in states\nfunction updateLoginStatus() {\n    if (Facebook.loggedIn) {\n        label.text = 'Logging in to ArrowDB as well, please wait...';\n        Cloud.SocialIntegrations.externalAccountLogin({\n            type: 'facebook',\n            token: Facebook.accessToken\n        }, function (e) {\n            if (e.success) {\n                var user = e.users[0];\n                alert('Logged in! You are now logged in as ' + user.id);\n            }\n            else {\n                error(e);\n            }\n        });\n    }\n    else {\n        label.text = 'Please login to Facebook.';\n    }\n}\n\n// when the user logs into or out of Facebook, link their login state with ArrowDB\nFacebook.addEventListener('login', updateLoginStatus);\nFacebook.addEventListener('logout', updateLoginStatus);\n\n// add the Facebook login button\nwin.add(Facebook.createLoginButton({\n    top: 10\n}));\n</code></pre>\n\n<p>For more examples, see the <a href=\"#!/api\">ArrowDB API documentation</a>.</p>\n\n<h2 id='titanium-section-importing-and-running-the-ti-cloud-sample-application'>Importing and running the Ti.Cloud Sample application</h2>\n\n<p>The Titanium Cloud module also includes a sample application that demonstrates each of the ArrowDB request\ntypes.</p>\n\n<p><strong>To import and run the Ti.Cloud sample application</strong>:</p>\n\n<ol>\n<li>In Studio, select <strong>File</strong> > <strong>New</strong> > <strong>Mobile App Project</strong>.</li>\n<li>Select the Classic application type with the Default Project template. <p><img src=\"guides/titanium/classic.png\" alt=\"\" width=\"521\" height=\"522\"></p></li>\n<li>In the New Mobile App Project dialog, enter values for the <strong>Project Name</strong> and <strong>App ID</strong> fields, and check\nthe option to <strong>Enable Appcelerator Platform Services</strong>. <p><img src=\"guides/titanium/enableservices.png\" alt=\"\" width=\"420\" height=\"183\"></p></li>\n<li>Click <strong>Finish</strong>.</li>\n<li><p>From your desktop, navigate to the following folder, where <code>&lt;latest_version&gt;</code> is the folder containing\nthe latest SDK version:</p>\n\n<ul>\n<li><strong>Mac</strong>: <code>~Library/Application Support/Titanium/modules/commonjs/ti.cloud/&lt;latest_version&gt;/example</code></li>\n<li><strong>Windows 7</strong>: <code>%ProgramData%\\Titanium\\modules\\commonjs\\ti.cloud\\&lt;latest_version&gt;\\example</code></li>\n<li><strong>Windows 8</strong>: <code>%AppData%\\Titanium\\modules\\commonjs\\ti.cloud\\&lt;latest_version&gt;\\example</code></li>\n<li><strong>Linux</strong>: <code>~/titaniumsdk/modules/commonjs/ti.cloud/&lt;latest_version&gt;\\example</code></li>\n</ul>\n</li>\n<li><p>Select all the folders and files in the <strong>example</strong> folder and drag them to your project's <strong>Resources</strong> folder. <p><img src=\"guides/titanium/dragfiles.png\" alt=\"\" width=\"449\" height=\"243\"></p></p>\n\n<ul>\n<li>If prompted, select the option to <strong>Copy Files and Folders</strong> and click <strong>OK</strong>.</li>\n<li>Click <strong>Yes to All</strong> when asked if you want to overwrite files.</li>\n</ul>\n</li>\n<li><p>Open the project's <code>tiapp.xml</code> file and, in the <strong>Modules</strong> section, add the <strong>facebook</strong>\nand <strong>ti.cloudpush</strong> modules. <p><img src=\"guides/titanium/modules.png\" alt=\"\" width=\"430\" height=\"394\"></p></p></li>\n<li>Save <code>tiapp.xml</code> and run the project on the desired device or emulator/simulator.</li>\n</ol>\n\n\n<p>Once the application is running, try the following:</p>\n\n<ul>\n<li><p>Create a new user by selecting <strong>Users > Create User</strong>. Enter a username, password and password\nconfirmation, first name, and last name, then click <strong>Create</strong>. If the user is created successfully, the following dialog is shown:\n<p><img src=\"guides/titanium/new_user_success.png\" alt=\"\" width=\"300\" height=\"184\"></p></p></li>\n<li><p>View the newly created user in Dashboard:</p>\n\n<ol>\n<li>Open <a href=\"https://platform.appcelerator.com\">Dashboard</a> and select your application from the <strong>Apps</strong> menu.</li>\n<li>Select <strong>Cloud > Manage Data</strong>, then click <strong>Users</strong> in the Manage Data Object table. You\nshould see the user you created listed in the Users table.\n<p><img src=\"guides/titanium/verify_new_user.png\" alt=\"\" width=\"570\" height=\"219\"></p></li>\n</ol>\n</li>\n</ul>\n\n\n<h2 id='titanium-section-references'>References</h2>\n\n<ul>\n<li><a href=\"#!/api\">ArrowDB API Reference</a></li>\n<li><a href=\"http://docs.appcelerator.com/platform/latest/#!api/Modules.Cloud\">Modules.Cloud Module Reference</a></li>\n</ul>\n\n","title":"Titanium SDK"});