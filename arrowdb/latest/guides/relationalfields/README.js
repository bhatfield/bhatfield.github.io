Ext.data.JsonP['relationalfields']({"guide":"<h1 id='relationalfields-section-relational-fields'>Relational Fields</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/relationalfields-section-create-a-relational-field'>Create a Relational Field</a><ul><li><a href='#!/guide/relationalfields-section-show-a-relational-field'>Show a Relational Field</a><li><a href='#!/guide/relationalfields-section-query-a-relational-field'>Query a Relational Field</a><li><a href='#!/guide/relationalfields-section-remove-a-relational-field'>Remove a Relational Field</a></ul>\n</div>\n\n<p>Relational Fields provide a simple way for users to define relations between\nany ArrowDB objects.</p>\n\n<h2 id='relationalfields-section-create-a-relational-field'>Create a Relational Field</h2>\n\n<p>To add or update a relation, you must provide an ArrowDB object ID and an ArrowDB\nobject type. These values together identify a unique ArrowDB object. The relation\nis specified using one of these formats:</p>\n\n<pre><code>[ACS_&lt;TYPENAME&gt;]&lt;fieldname_id&gt;\n[ACS_&lt;TYPENAME&gt;]&lt;fieldname_ids&gt;\n[CUSTOM_&lt;TYPENAME&gt;]&lt;fieldname_id&gt;\n[CUSTOM_&lt;TYPENAME&gt;]&lt;fieldname_ids&gt;\n</code></pre>\n\n<p>Where <em>TYPENAME</em> indicates ArrowDB type or ArrowDB custom object type of the object\npointed to. For example, ArrowDB_User represents an ArrowDB User object, ArrowDB_Photo\nrepresents an ArrowDB Photo object, and CUSTOM_car represents an ArrowDB custom object\nof class <code>car</code>.</p>\n\n<p>To create the relation, create a custom field using one of the relational\nfield name formats shown above. For example, in the following custom fields,\nwe add two relations :</p>\n\n<pre><code>Custom_fields = {\n    \"[ACS_User]owner_id\":\"4d6e77386f70950c89000001\",\n    \"[CUSTOM_car]mycar_id\":\"4d51d4186f70952d4c000006\"\n}\n</code></pre>\n\n<p>For example, when creating a custom <code>car</code> object, we can specify an owner and\npicture for the car:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -F \"key=sesObkV0qTaPSEwcHc6DGcR21EWN9HT0\" -F \"id=506e4c775554f7470b00001d\" -F \"fields={\"[ACS_User]owner_id\":\"506e4c735554f7470b000003\", \"[ACS_Photo]picture_id\":\"506e4c755554f7470b00000a\"}\" \"https://api.cloud.appcelerator.com/v1/objects/car/create.json?key=\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateCustomObject\"\n  },\n  \"response\": {\n    \"car\": [\n      {\n        \"[ACS_Photo]picture_id\": [\n          {\n            \"id\": \"506e4c755554f7470b00000a\",\n            \"filename\": \"photo.jpg\",\n            \"size\": 584344,\n            \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n            \"created_at\": \"2012-10-05T02:56:53+0000\",\n            \"updated_at\": \"2012-10-05T02:56:53+0000\",\n            \"processed\": false,\n            \"user\": {\n              \"id\": \"506e4c735554f7470b000005\",\n              \"first_name\": \"Frank\",\n              \"last_name\": \"Jobs\",\n              \"created_at\": \"2012-10-05T02:56:51+0000\",\n              \"updated_at\": \"2012-10-05T02:56:55+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"confirmed_at\": \"2012-10-05T02:56:51+0000\",\n              \"email\": \"frank@guy.com\",\n              \"admin\": \"false\"\n            },\n            \"content_type\": \"image/jpeg\",\n            \"likes_count\": 1\n          }\n        ],\n        \"color\": \"blue\",\n        \"model\": \"nissan\",\n        \"mileage\": 1000,\n        \"purchased_date\": \"2011-11-01 17:08:36 -0700\",\n        \"[ACS_User]owner_id\": [\n          {\n            \"id\": \"506e4c735554f7470b000003\",\n            \"first_name\": \"Alice\",\n            \"last_name\": \"Gal\",\n            \"created_at\": \"2012-10-05T02:56:51+0000\",\n            \"updated_at\": \"2012-10-05T02:56:51+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"confirmed_at\": \"2012-10-05T02:56:51+0000\",\n            \"username\": \"alice\",\n            \"email\": \"alice@gal.com\",\n            \"admin\": \"false\"\n          }\n        ],\n        \"id\": \"506e4c775554f7470b00001d\",\n        \"created_at\": \"2012-10-05T02:56:55+0000\",\n        \"updated_at\": \"2012-10-05T02:56:56+0000\",\n        \"user\": {\n          \"id\": \"506e4c735554f7470b000005\",\n          \"first_name\": \"Frank\",\n          \"last_name\": \"Jobs\",\n          \"created_at\": \"2012-10-05T02:56:51+0000\",\n          \"updated_at\": \"2012-10-05T02:56:55+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2012-10-05T02:56:51+0000\",\n          \"email\": \"frank@guy.com\",\n          \"admin\": \"false\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h3 id='relationalfields-section-show-a-relational-field'>Show a Relational Field</h3>\n\n<p>When you show an ArrowDB object, if the ArrowDB object has a relation to another ArrowDB\nobject, ArrowDB includes the referenced ArrowDB object. For example, suppose a Custom object\nof type <code>car</code> has two relations: an owner and a picture. When you call <code>show</code> on the object,\nthe user and photo object are included in the response. Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createObject\"\n  },\n  \"response\": {\n    \"car\": [\n      {\n        \"color\": \"blue\",\n        \"make\": \"nissan\",\n        \"purchased_at\": \"2011-11-03T00:07:37+0000\",\n        \"year\": 2005,\n        \"used\": false,\n        \"coordinates\": [\n          [\n            -122.1,\n            37.1\n          ]\n        ],\n        “[ACS_User]owner_id” : {\n            \"id\":\"4d6e77386f70950c89000001\",\n            \"first_name\":\"John\",\n            \"last_name\":\"Smith\",\n            \"role\": \"teacher\",\n            \"created_at\":\"2011-03-02T16:58:32+0000\",\n            \"updated_at\":\"2011-03-02T16:58:32+0000\",\n            \"facebook_authorized\":false,\n            \"email\":\"john.smith@company.com\",\n            \"photo\": {\n                \"id\":\"4d882896d0afbe0a3600000d\",\n                \"filename\":\"photo.jpg\",\n                \"size\":584344,\n                \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n                \"created_at\":\"2011-03-22T04:41:58+0000\",\n                \"updated_at\":\"2011-03-22T04:42:07+0000\",\n                \"processed\":false\n            },\n            \"custom_fields\": {\n                \"age\":28,\n                \"favorite_color\":\"blue\"\n            }\n        },\n        “[ACS_Photo]picture_id”:{\n            \"id\":\"4d51d4186f70952d4c000006\",\n            \"filename\":\"photo.jpg\",\n            \"size\":584344,\n            \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n            \"created_at\":\"2011-02-08T23:39:04+0000\",\n            \"updated_at\":\"2011-02-08T23:39:04+0000\",\n            \"processed\":false\n        },\n        \"id\": \"4ec42de1d9ca72c50700000d\",\n        \"created_at\": \"2011-11-16T21:40:49+0000\",\n        \"updated_at\": \"2011-11-16T21:40:49+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h3 id='relationalfields-section-query-a-relational-field'>Query a Relational Field</h3>\n\n<p>A relation points to an ArrowDB object, so to query a relation, you must first\nget the ArrowDB object pointed by the relation. For example, if you want to\nquery cars whose owner is “John Smith”, you first need to find the <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>\nobject whose full name is “John Smith”:</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"first_name\":\"John\",\"last_name\":”Smith”}' --data-urlencode 'order=created_at' \"https://api.cloud.appcelerator.com/v1/users/query.json?key={YOUR APP APP KEY}\"\n</code></pre>\n\n<p>If the user exists, use the user ID to query the custom objects collection\nfor cars that have a <code>[ACS_User]owner_id</code> property with the specified value.</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where= {\"[ACS_User]owner_id\":\"the user’s object id\"}' --data-urlencode 'order=-purchased_at' \"https://api.cloud.appcelerator.com/v1/objects/car/query.json?key={YOUR APP APP KEY}\"\n</code></pre>\n\n<h3 id='relationalfields-section-remove-a-relational-field'>Remove a Relational Field</h3>\n\n<p>To remove a relational field from an ArrowDB object, set the field's value to null. For\nexample, remove to picture from a Custom object:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT --data-urlencode 'fields={“[ACS_Photo]picture_id”:null}' \"https://api.cloud.appcelerator.com/v1/objects/car/update.json?key={YOUR APP APP KEY}\"\n</code></pre>\n","title":"Relational Fields"});